{"version":3,"sources":["webpack:///src/app/pages/management/models/CompanyTypeListDTO.ts","webpack:///src/app/pages/management/backend/common/services/access.service.ts","webpack:///src/app/pages/management/models/ThirdPartyTypeDTO.ts","webpack:///src/app/pages/management/management-routing.module.ts","webpack:///src/app/pages/management/management.component.ts","webpack:///src/app/pages/management/management.component.html","webpack:///src/app/pages/management/components/access-management/access-management.component.ts","webpack:///src/app/pages/management/components/access-management/access-management.component.html","webpack:///src/app/pages/management/backend/common/services/companytypeList.service.ts","webpack:///src/app/pages/management/management.module.ts","webpack:///src/app/pages/management/backend/common/services/user-management.service.ts","webpack:///src/app/pages/management/components/user-management/user-management.component.ts","webpack:///src/app/pages/management/components/user-management/user-management.component.html","webpack:///src/app/pages/management/backend/common/services/thirdPartyManage.service.ts","webpack:///src/app/pages/management/backend/common/api/user-management.api.ts","webpack:///src/app/pages/management/components/access-management-form/access-management-form.component.ts","webpack:///src/app/pages/management/components/access-management-form/access-management-form.component.html","webpack:///src/app/pages/management/components/companytypelist/companytypelist.component.ts","webpack:///src/app/pages/management/components/companytypelist/companytypelist.component.html","webpack:///src/app/pages/management/components/thirdpartymanage/thirdpartymanage.component.ts","webpack:///src/app/pages/management/components/thirdpartymanage/thirdpartymanage.component.html","webpack:///src/app/pages/management/components/user-management-form/user-management-form.component.ts","webpack:///src/app/pages/management/components/user-management-form/user-management-form.component.html"],"names":["CompanyTypeListsDTO","CompanyTypeListDTO","id","search","name","companyId","createdAt","updatedAt","listType","AccessService","http","get","apiUrl","httpParams","append","params","_nameacces","post","_idacces","_accessrol","ThirdPartyTypeListDTO","ThirdPartyTypeDTO","status","routes","path","component","children","ManagementRoutingModule","forChild","routedComponents","ManagementComponent","translate","lang","localStorage","getItem","currentlang","currentLang","use","AccessManagementComponent","router","accessService","toUpperCase","searchTextChanged","users","paginationFilter","mySettings","actions","add","mode","addButtonContent","createButtonContent","cancelButtonContent","confirmCreate","edit","editButtonContent","saveButtonContent","confirmSave","deleteButtonContent","confirmDelete","columns","title","type","filter","editable","addable","lenguagetable","funtionconstructor","translatecomponent","subscribe","query","source","setSearchQuery","navigate","$event","user","data","event","console","log","DeleteNameAccess","getAccessall","next","target","value","newData","createNameAccess","refresh","refeshtitlestable","stream","index","res","settings","Object","assign","length","getByCompany","result","create","searchUser","onEdit","onDelete","CompanytypeListService","companyTypeListDTO","st","String","parameters","queryParams","fromObject","components","ManagementModule","UserManagementService","api","ResetPassword","update","getServerDataSource","list","roleUserDTO","iduser","set","UserManagementComponent","userManagementService","toasterService","identification","lastName","email","getDataSource","searchText","success","icon","thirdPartyManageService","thirdPartyTypeListDTO","ThirdPartyTypeId","UserManagementApi","apiController","put","perPage","toString","pageNumber","options","AccessManagementFormComponent","route","location","toastrService","fb","headerTitle","emailError","loginError","identificationError","userForm","initUserForm","initsecondform","loadUser","group","control","minLength","maxLength","login","required","isActive","pattern","secondForm","nameAccess","logoempresa","changepassword","thirdparties","typeslistbyquery","procurator","access","setting","sentto","monitoring","individual","massive","manager","historyreport","getlog","queriesandmatches","coincidencedetailing","viewpastconsultations","certificationlistupdates","parameterscategory","news","roi","faqs","signal","snapshot","paramMap","getPermissionsByAccessId","response","accessId","setValue","disable","error","danger","createAccessByCompany","updateAccess","preventDefault","back","errorResponse","errorObj","errors","hasOwnProperty","markAsDirty","getPermissionsByUser","roles","keys","map","key","onSecondSubmit","save","CompanytypelistComponent","_companytypeService","_sanitizer","destroyByClick","duration","hasIcon","position","TOP_RIGHT","preventDuplicates","content","types","positions","TOP_LEFT","BOTTOM_LEFT","TOP_END","TOP_START","BOTTOM_END","BOTTOM_START","quotes","body","width","renderComponent","onComponentInitFunction","instance","row","updateStatus","listTypeId","valuePrepareFunction","cell","bypassSecurityTrustHtml","listGroup","color","filterFunction","includes","country","initialize","getCompany","window","confirm","resolve","reject","datatemporal","isObjEmpty","checked","updateRangeStatus","showToast","getTypeList","obj","prop","config","titleContent","show","setCheckedStatus","onDeleteConfirm","onSaveConfirm","onCreateConfirm","ThirdpartymanageComponent","_thirdPartyManageService","selectedRows","BOTTOM_RIGHT","sortDirection","updateThirdPartyType","editor","traductorlocal","getByCompanyID","deleteThirdPartyType","createThirdPartyType","CompanyId","tp","onRowSelect","UserManagementFormComponent","BtnResetPassword","accessrol","editAdd","inithirdform","getAllAccess","thirdForm","thirdCtrl","clearErrors","setupErrorResponse","y","JSON","parse","stringify","rolesuser","reset","createRolesUser","warning","controls","parseInt","selectedAccessDefault","x","e"],"mappings":"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","file":"management-management-module-es5.js","sourcesContent":["export class CompanyTypeListsDTO {\r\n    companyList:CompanyTypeListDTO[];\r\n}\r\n\r\nexport class CompanyTypeListDTO {\r\n    id: number;\r\n    search: boolean;\r\n    name: string;\r\n    companyId: number;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    listType: any;\r\n    constructor(){\r\n        this.id=0;\r\n        this.search= false;\r\n        this.name= \" \";\r\n        this.companyId=  0;\r\n        this.createdAt= \" \";\r\n        this.updatedAt= \" \"; \r\n        this.listType= {}; \r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../../../environments/environment';\r\nimport { AccessRolDTO } from '../../../models/RoleUserDTO';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccessService {\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\npublic getByCompany(){\r\n  return this.http.get<any>(`${environment.apiUrl}/AccessController/GetByCompany`)\r\n}\r\n\r\npublic getPermissionsByAccessId(id:string){\r\n  let httpParams = new HttpParams()\r\n  .append(\"AccessId\", id)\r\n  return this.http.get<any>(`${environment.apiUrl}/AccessController/GetPermissionsByAccessId`,{params : httpParams})\r\n}\r\n\r\npublic createNameAccess(_nameacces:any){\r\n  return this.http.post<any>(`${environment.apiUrl}/AccessController/Create`,_nameacces)\r\n}\r\n\r\npublic DeleteNameAccess(_idacces:string){\r\n\r\n  let httpParams = new HttpParams()\r\n  .append(\"id\", _idacces)\r\n  return this.http.post<string>(`${environment.apiUrl}/AccessController/Delete`,null,{params : httpParams})\r\n\r\n}\r\n\r\npublic createAccessByCompany(_accessrol:AccessRolDTO){\r\n  return this.http.post<AccessRolDTO>(`${environment.apiUrl}/AccessController/CreateAccessJson`,_accessrol)\r\n}\r\n\r\npublic updateAccess(_accessrol:AccessRolDTO){\r\n  return this.http.post<AccessRolDTO>(`${environment.apiUrl}/AccessController/UpdateAccess`,_accessrol)\r\n}\r\n\r\n\r\n}\r\n","export class ThirdPartyTypeListDTO {\r\n    // thirdpartyTypeList: ThirdPartyTypeDTO[];\r\n    //user: UserDTO;\r\n}\r\n\r\nexport class ThirdPartyTypeDTO {\r\n    id: number;\r\n    name: string;\r\n    status: boolean;\r\n    createdAt:string;\r\n    listType:any;\r\n    constructor(){\r\n        this.id = 0;\r\n        this.name ='';\r\n        this.status = false;\r\n        this.createdAt = '';\r\n    }\r\n    //user: UserDTO;\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ManagementComponent} from './management.component';\r\nimport {UserManagementComponent} from './components/user-management/user-management.component';\r\nimport {UserManagementFormComponent} from './components/user-management-form/user-management-form.component';\r\nimport {ThirdpartymanageComponent} from './components/thirdpartymanage/thirdpartymanage.component';\r\nimport {CompanytypelistComponent} from './components/companytypelist/companytypelist.component';\r\nimport {ManageprocuracyComponent} from './components/manageprocuracy/manageprocuracy.component';\r\nimport { AccessManagementComponent } from './components/access-management/access-management.component';\r\nimport { AccessManagementFormComponent } from './components/access-management-form/access-management-form.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ManagementComponent,\r\n        children: [\r\n            {\r\n                path: 'users',\r\n                component: UserManagementComponent,\r\n            },\r\n            {\r\n                path: 'users/create',\r\n                component: UserManagementFormComponent,\r\n            },\r\n            {\r\n                path: 'users/edit/:id',\r\n                component: UserManagementFormComponent,\r\n            },\r\n            {\r\n                path: 'thirdpartymanage',\r\n                component: ThirdpartymanageComponent,\r\n            },\r\n            {\r\n                path: 'companytypelist',\r\n                component: CompanytypelistComponent,\r\n            },\r\n            {\r\n                path: 'manageprocuracy',\r\n                component: ManageprocuracyComponent,\r\n            },\r\n            {\r\n                path: 'access',\r\n                component: AccessManagementComponent,\r\n            },\r\n            {\r\n                path: 'access/create',\r\n                component: AccessManagementFormComponent,\r\n            },\r\n            {\r\n                path: 'access/edit/:id',\r\n                component: AccessManagementFormComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class ManagementRoutingModule {\r\n}\r\n\r\nexport const routedComponents = [\r\n    ThirdpartymanageComponent,\r\n    CompanytypelistComponent,\r\n    UserManagementComponent,\r\n    ManagementComponent,\r\n    UserManagementFormComponent,\r\n    AccessManagementComponent,\r\n    AccessManagementFormComponent\r\n];\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'ngx-management',\r\n    templateUrl: './management.component.html',\r\n})\r\n\r\nexport class ManagementComponent implements OnInit {\r\n    public lang:string;\r\n    constructor(private translate: TranslateService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        \r\n    this.lang = localStorage.getItem ('lang');\r\n    let currentlang = this.translate.currentLang\r\n    currentlang=this.lang\r\n    this.translate.use(currentlang);\r\n    \r\n    }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {UserManagementService} from '../../backend/common/services/user-management.service';\r\nimport {Subject} from 'rxjs';\r\nimport {PaginationFilter} from '../../../../utils/pagination-filter';\r\nimport {CustomServerDataSource} from '../../../../utils/custom-server.data-source';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { title } from 'process';\r\nimport { AccessService } from '../../backend/common/services/access.service';\r\nimport { Ng2SmartTableComponent } from 'ng2-smart-table';\r\n\r\n@Component({\r\n    selector: 'ngx-access-management',\r\n    templateUrl: './access-management.component.html',\r\n    styleUrls: ['./access-management.component.scss'],\r\n})\r\nexport class AccessManagementComponent implements OnInit {\r\n    \r\n    public lang:string=localStorage.getItem ('lang').toUpperCase();\r\n    public searchTextChanged = new Subject<string>();\r\n    public users: Array<any> = [];\r\n    public source: CustomServerDataSource;\r\n    public search = '';\r\n    public paginationFilter = new PaginationFilter();\r\n    public settings;\r\n    public mySettings = {\r\n        actions:{\r\n            add:false,\r\n            delete:true,      \r\n        },\r\n        mode: 'external',\r\n        add: {\r\n            addButtonContent: '<i class=\"nb-plus\"></i>',\r\n            createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n            confirmCreate: true\r\n        },\r\n        edit: {\r\n            editButtonContent: '<i class=\"nb-edit\"></i>',\r\n            saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n            confirmSave: true\r\n        },\r\n        delete: {\r\n            deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n            confirmDelete: true,\r\n        },   \r\n        columns: {\r\n            name: {\r\n                title: 'Nombres',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            createdAt: {\r\n                title: 'Fecha de creación',\r\n                type: 'string',\r\n                filter: false,\r\n                editable: false,\r\n                addable: false,\r\n            },    \r\n        }, \r\n    \r\n    };\r\n\r\n    public lenguagetable = [\"name\",\"createdAt\"]\r\n    constructor(private router: Router,\r\n                private accessService:AccessService,\r\n                private translate: TranslateService)\r\n    {\r\n        this.funtionconstructor();\r\n        \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.translatecomponent()\r\n        this.searchTextChanged\r\n            // .debounceTime(250)\r\n            // .distinctUntilChanged()\r\n            .subscribe((query) => {\r\n                this.source.setSearchQuery(query);\r\n        });\r\n    }\r\n\r\n    create() {\r\n    this.router.navigate([`/pages/management/access/create`]);\r\n    }\r\n\r\n    onEdit($event: any) {\r\n        const user = $event.data;\r\n        this.router.navigate([`/pages/management/access/edit/${user.id}`]);\r\n    }\r\n\r\n    onDelete(event: any) {\r\n        console.log(event);\r\n        let data = event.data.id;\r\n        this.accessService.DeleteNameAccess(data).subscribe(()=>{\r\n            this.getAccessall();\r\n        });\r\n    }\r\n\r\n    searchUser($event) {\r\n        this.searchTextChanged.next($event.target.value);\r\n    }\r\n\r\n    onCreateConfirm($event){\r\n        let data = {name:$event.newData.name}\r\n        this.accessService.createNameAccess(data).subscribe(()=>{\r\n            this.source.refresh();\r\n        });\r\n        console.log($event);\r\n    }\r\n\r\n    onRowSelect(event): void   {\r\n\r\n\r\n    }\r\n    public funtionconstructor(){\r\n        this.getAccessall();\r\n        /*this.source = this.AccessService.getServerDataSource();\r\n        this.translatecomponent()\r\n        this.settings = Object.assign({}, this.mySettings)*/\r\n    }\r\n\r\n    public translatecomponent(){\r\n        this.lang = localStorage.getItem ('lang');\r\n        let currentlang = this.translate.currentLang\r\n        currentlang=this.lang\r\n        this.translate.use(currentlang);\r\n        this.refeshtitlestable();\r\n    }\r\n\r\n    public refeshtitlestable(){\r\n        for (let index = 0; index < this.lenguagetable.length; index++) {\r\n            this.translate.stream(\"GenericTable.\"+this.lenguagetable[index]).subscribe((res: string) => {\r\n                this.mySettings.columns[this.lenguagetable[index]].title = res\r\n                this.settings = Object.assign({}, this.mySettings);\r\n            })\r\n        }\r\n    }\r\n\r\n    public getAccessall(){\r\n        this.accessService.getByCompany().subscribe((result)=>{\r\n            this.source = result\r\n            this.translatecomponent()\r\n            this.settings = Object.assign({}, this.mySettings)\r\n        })\r\n    }\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        {{ \"AccessComponent.Administrar_usuarios\" | translate}} \r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n        <!--<label class=\"search-label\" for=\"search\">Search:</label>\r\n        <input nbInput [nbFilterInput]=\"source\" id=\"search\" class=\"search-input\">-->\r\n\r\n        <!--<nb-card-body>\r\n            <nb-form-field>\r\n                <button status=\"primary\" (click)=\"toggleShowPassword()\" nbButton nbSuffix>\r\n                    <nb-icon icon=\"nb-plus\"></nb-icon>\r\n                </button>\r\n                <input [type]=\"getInputType()\" nbInput>\r\n            </nb-form-field>\r\n        </nb-card-body>-->\r\n\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-1\">\r\n                <button (click)=\"create()\" status=\"primary\" nbButton nbSuffix> {{ \"Components.Agregar\" | translate}}</button>\r\n            </div>\r\n            <div class=\"col-md-11 searchbar\">\r\n                <nb-form-field>\r\n                    <input [(ngModel)]=\"search\"\r\n                           (keyup)=\"searchUser($event)\"\r\n                           nbInput>\r\n                    <button ghost nbButton nbSuffix>\r\n                        <nb-icon [icon]=\"'search-outline'\"\r\n                                 pack=\"eva\">\r\n                        </nb-icon>\r\n                    </button>\r\n                </nb-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <ng2-smart-table class=\"example-smart-table\"\r\n                         (edit)=\"onEdit($event)\"\r\n                         (delete)=\"onDelete($event)\"\r\n                         [(settings)]=\"settings\"\r\n                         [source]=\"source\">\r\n        </ng2-smart-table>\r\n\r\n    </nb-card-body>\r\n</nb-card>\r\n","import {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../../../../environments/environment.prod';\r\nimport {CompanyTypeListDTO, CompanyTypeListsDTO} from '../../../models/CompanyTypeListDTO';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanytypeListService {\r\n\r\n  private urlApi: string;\r\n  private handleError: any;\r\n  private resolveRR: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  public getTypeList(): Observable<CompanyTypeListsDTO> {\r\n\r\n    return this.http.get<CompanyTypeListsDTO>(`${environment.apiUrl}/CompanyTypeList/GetTypeList`)\r\n  }\r\n  public updateStatus(companyTypeListDTO: CompanyTypeListDTO) {\r\n    return this.http.post<string>(`${environment.apiUrl}/CompanyTypeList/UpdateTypeList`, companyTypeListDTO)\r\n  }\r\n  public updateRangeStatus(status: boolean) {\r\n    var st = String(status);    \r\n    let parameters = {\"status\":st};\r\n    let queryParams = new HttpParams({fromObject:{status:st}});     \r\n    return this.http.post<string>(`${environment.apiUrl}/CompanyTypeList/UpdateRangeTypeList?status=${st}`,null)\r\n  }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ManagementRoutingModule } from './management-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n    NbAccordionModule,\r\n    NbButtonModule,\r\n    NbCardModule,\r\n    NbFormFieldModule,\r\n    NbIconModule,\r\n    NbInputModule, NbSelectModule,\r\n    NbStepperModule,\r\n    NbToggleModule,\r\n    NbTreeGridModule\r\n} from '@nebular/theme';\r\nimport { ComponentsModule } from '../../@components/components.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ManagementComponent } from './management.component';\r\nimport { UserManagementService } from './backend/common/services/user-management.service';\r\nimport { UserManagementFormComponent } from './components/user-management-form/user-management-form.component';\r\nimport { UserManagementComponent } from './components/user-management/user-management.component';\r\nimport { UserManagementApi } from './backend/common/api/user-management.api';\r\nimport { CustomHttpService } from \"../../utils/custom-http.service\";\r\nimport { ThemeModule } from \"../../@theme/theme.module\";\r\nimport { ThirdpartymanageComponent } from './components/thirdpartymanage/thirdpartymanage.component';\r\nimport { CompanytypelistComponent } from './components/companytypelist/companytypelist.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AccessManagementComponent } from './components/access-management/access-management.component';\r\nimport { AccessManagementFormComponent } from './components/access-management-form/access-management-form.component';\r\nimport {thirdPartyManageService} from \"./backend/common/services/thirdPartyManage.service\";\r\n\r\n\r\n\r\nconst components = [\r\n    ThirdpartymanageComponent,\r\n    CompanytypelistComponent,\r\n    UserManagementComponent,\r\n    ManagementComponent,\r\n    UserManagementFormComponent,   \r\n    AccessManagementComponent,\r\n    AccessManagementFormComponent\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ManagementRoutingModule,\r\n        ReactiveFormsModule,\r\n        NbCardModule,\r\n        ComponentsModule,\r\n        NbInputModule,\r\n        NbButtonModule,\r\n        Ng2SmartTableModule,\r\n        NbFormFieldModule,\r\n        NbAccordionModule,\r\n        NbIconModule,\r\n        NbTreeGridModule,\r\n        FormsModule,\r\n        ThemeModule,\r\n        NbSelectModule,\r\n        NbToggleModule, \r\n        NbStepperModule,\r\n        TranslateModule\r\n    ],\r\n    providers: [\r\n        CustomHttpService,\r\n        UserManagementApi,\r\n        UserManagementService,\r\n        thirdPartyManageService,\r\n    ],\r\n    declarations: [...components],\r\n})\r\nexport class ManagementModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UserManagementApi} from '../api/user-management.api';\r\nimport {Observable} from 'rxjs';\r\nimport {PaginationFilter} from '../../../../../utils/pagination-filter';\r\nimport {ApiPaginationResponse} from '../../../../../utils/api-pagination-response';\r\nimport {ApiResponse} from '../../../../../utils/api-response';\r\nimport {User} from '../../../models/user';\r\nimport {CustomServerDataSource} from '../../../../../utils/custom-server.data-source';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { RoleUserDTO } from '../../../models/RoleUserDTO';\r\nimport { environment } from '../../../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class UserManagementService {\r\n\r\n    constructor(\r\n        private api: UserManagementApi,\r\n        private http: HttpClient\r\n    ) {\r\n\r\n    }\r\n\r\n    get(id: number): Observable<ApiResponse<User>> {\r\n        return this.api.get<ApiResponse<User>>(id);\r\n    }\r\n\r\n    create(data: User): Observable<User> {\r\n        return this.api.create(data);\r\n    }\r\n\r\n    ResetPassword(id: number, data: User) : Observable<User>{\r\n        return this.api.ResetPassword(id, data);\r\n    }\r\n\r\n    update(id: number, data: User): Observable<User> {\r\n        return this.api.update(id, data);\r\n    }\r\n\r\n    delete(id: number): Observable<boolean> {\r\n        return this.api.delete(id);\r\n    }\r\n\r\n    getServerDataSource(data: PaginationFilter): CustomServerDataSource {\r\n        return this.api.getServerDataSource(data);\r\n    }\r\n\r\n    list(paginationFilter: PaginationFilter): Observable<ApiPaginationResponse<any>> {\r\n        return this.api.list(paginationFilter);\r\n    }\r\n\r\n    public createRolesUser(roleUserDTO:RoleUserDTO){\r\n        return this.http.post<RoleUserDTO>(`${environment.apiUrl}/management/Permissions/Update`,roleUserDTO)\r\n    }\r\n\r\n    public getPermissionsByUser(iduser:string){\r\n        let params = new HttpParams().set('UserId', iduser);\r\n        return this.http.get<RoleUserDTO>(`${environment.apiUrl}/management/Permissions/GetPermissionsByUser`,{ params } )\r\n    }\r\n\r\n    \r\n\r\n    /*getDataSource(data: PaginationFilter): DataSource {\r\n        return this.api.getDataSource(data);\r\n    }*/\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {UserManagementService} from '../../backend/common/services/user-management.service';\r\nimport {Subject} from 'rxjs';\r\nimport {PaginationFilter} from '../../../../utils/pagination-filter';\r\nimport {CustomServerDataSource} from '../../../../utils/custom-server.data-source';\r\nimport { NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n    selector: 'ngx-user-management',\r\n    templateUrl: './user-management.component.html',\r\n    styleUrls: ['./user-management.component.scss'],\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n\r\n    constructor(private router: Router, private userManagementService: UserManagementService, private toasterService: NbToastrService) {\r\n    }\r\n\r\n    searchTextChanged = new Subject<string>();\r\n    users: Array<any> = [];\r\n    source: CustomServerDataSource;\r\n    search = '';\r\n    paginationFilter = new PaginationFilter();\r\n    settings = {\r\n        actions: {\r\n            add: false,\r\n            delete: false\r\n        },\r\n        mode: 'external',\r\n        add: {\r\n            addButtonContent: '<i class=\"nb-plus\"></i>',\r\n            createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        edit: {\r\n            editButtonContent: '<i class=\"nb-edit\"></i>',\r\n            saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        delete: {\r\n            deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n            confirmDelete: true,\r\n        },\r\n        columns: {\r\n            /*id: {\r\n                title: 'Id',\r\n                type: 'number',\r\n                filter: false,\r\n            },*/\r\n            identification: {\r\n                title: 'Numero Documento',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            name: {\r\n                title: 'Nombres',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            lastName: {\r\n                title: 'Apellidos',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            email: {\r\n                title: 'E-mail',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            createdAt: {\r\n                title: 'Fecha de creación',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n        },\r\n    };\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        this.searchText();\r\n    }\r\n\r\n    searchText(){\r\n        this.searchTextChanged\r\n        // .debounceTime(250)\r\n        // .distinctUntilChanged()\r\n        .subscribe((query) => {\r\n            this.source.setSearchQuery(query);\r\n        });        \r\n    }\r\n\r\n    getDataSource(){\r\n        this.source = this.userManagementService.getServerDataSource(this.paginationFilter);\r\n    }\r\n\r\n    create() {\r\n        this.router.navigate([`/pages/management/users/create`]);\r\n    }\r\n\r\n    onEdit($event: any) {\r\n        const user = $event.data;\r\n        this.router.navigate([`/pages/management/users/edit/${user.id}`]);\r\n    }\r\n\r\n    onDelete($event: any) {\r\n        this.userManagementService.delete($event.data.id).subscribe(data => {\r\n            this.toasterService.success('', `Ususario eliminado con exitoso!`, {\r\n                icon: '',\r\n            });\r\n            this.getDataSource();            \r\n        });\r\n    }\r\n\r\n    searchUser($event) {\r\n        this.searchTextChanged.next($event.target.value);\r\n    }\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        Administrar usuarios\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n        <!--<label class=\"search-label\" for=\"search\">Search:</label>\r\n        <input nbInput [nbFilterInput]=\"source\" id=\"search\" class=\"search-input\">-->\r\n\r\n        <!--<nb-card-body>\r\n            <nb-form-field>\r\n                <button status=\"primary\" (click)=\"toggleShowPassword()\" nbButton nbSuffix>\r\n                    <nb-icon icon=\"nb-plus\"></nb-icon>\r\n                </button>\r\n                <input [type]=\"getInputType()\" nbInput>\r\n            </nb-form-field>\r\n        </nb-card-body>-->\r\n\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-1\">\r\n                <button (click)=\"create()\" status=\"primary\" nbButton nbSuffix>Agregar</button>\r\n            </div>\r\n            <div class=\"col-md-11 searchbar\">\r\n                <nb-form-field>\r\n                    <input [(ngModel)]=\"search\"\r\n                        (keyup)=\"searchUser($event)\"\r\n                        nbInput>\r\n                    <button ghost nbButton nbSuffix>\r\n                        <nb-icon [icon]=\"'search-outline'\"\r\n                                pack=\"eva\">\r\n                        </nb-icon>\r\n                    </button>\r\n                </nb-form-field>  \r\n            </div>\r\n        </div>\r\n\r\n        <ng2-smart-table class=\"example-smart-table\"\r\n                        (edit)=\"onEdit($event)\"                        \r\n                        [settings]=\"settings\"\r\n                        [source]=\"source\">\r\n        </ng2-smart-table>\r\n\r\n    </nb-card-body>\r\n</nb-card>\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../../../environments/environment.prod';\r\nimport {ThirdPartyTypeDTO, ThirdPartyTypeListDTO} from '../../../models/ThirdPartyTypeDTO';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class thirdPartyManageService {\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\n\r\npublic getByCompanyID(): Observable<ThirdPartyTypeDTO[]> {\r\n  return this.http.get<ThirdPartyTypeDTO[]>(`${environment.apiUrl}/ThirdPartyType/GetByCompanyID`)\r\n}\r\n\r\npublic updateThirdPartyType(thirdPartyTypeListDTO:ThirdPartyTypeListDTO){\r\n  return this.http.post<ThirdPartyTypeListDTO>(`${environment.apiUrl}/ThirdPartyType/UpdateThirdPartyType`,thirdPartyTypeListDTO)\r\n}\r\n\r\npublic createThirdPartyType(thirdPartyTypeListDTO:ThirdPartyTypeListDTO){\r\n  return this.http.post<ThirdPartyTypeListDTO>(`${environment.apiUrl}/ThirdPartyType/CreateThirdPartyType`,thirdPartyTypeListDTO)\r\n}\r\n\r\npublic deleteThirdPartyType(ThirdPartyTypeId:string){\r\n  let httpParams = new HttpParams()\r\n    .append(\"ThirdPartyTypeId\", ThirdPartyTypeId)\r\n  //const params = new HttpParams({ fromObject: { ThirdPartyTypeId } });\r\n  return this.http.post<string>(`${environment.apiUrl}/ThirdPartyType/DeleteThirdPartyType`,null,{params : httpParams})\r\n}\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {PaginationFilter} from '../../../../../utils/pagination-filter';\r\nimport {HttpParams} from '@angular/common/http';\r\nimport {User} from '../../../models/user';\r\nimport {CustomServerDataSource} from '../../../../../utils/custom-server.data-source';\r\nimport {CustomHttpService} from '../../../../../utils/custom-http.service';\r\n\r\n@Injectable()\r\nexport class UserManagementApi {\r\n\r\n    private readonly apiController: string = 'management/users';\r\n\r\n    constructor(private api: CustomHttpService) {\r\n    }\r\n\r\n    get<T>(id: number): Observable<T> {\r\n        return this.api.get(`${this.apiController}/${id}`);\r\n    }\r\n\r\n    create(data: User): Observable<User> {\r\n        return this.api.post(`${this.apiController}`, data);\r\n    }\r\n\r\n    update(id: number, data: User): Observable<User> {\r\n        return this.api.put(`${this.apiController}/${id}`, data);\r\n    }\r\n\r\n    ResetPassword(id:number, data: User) : Observable<User>{\r\n        return this.api.put(`${this.apiController}/ResetPassword/${id}`, data);\r\n    }\r\n\r\n    delete(id: number): Observable<boolean> {\r\n        return this.api.delete(`${this.apiController}/${id}`);\r\n    }\r\n\r\n    list(paginationFilter: PaginationFilter): Observable<any> {\r\n        const params = new HttpParams({\r\n            fromObject: {\r\n                query: paginationFilter.query,\r\n                perPage: paginationFilter.perPage.toString(),\r\n                pageNumber: paginationFilter.pageNumber.toString(),\r\n            },\r\n        });\r\n\r\n        const options = {\r\n            params,\r\n        };\r\n\r\n        return this.api.get(`${this.apiController}`, options);\r\n    }\r\n\r\n    // getDataSource(data: PaginationFilter): Promise<LocalDataSource> {\r\n    //     return this.api.getDataSource(`${this.apiController}`, data);\r\n    // }\r\n\r\n    getServerDataSource(data: PaginationFilter): CustomServerDataSource {\r\n        return this.api.getServerDataSource(`${this.apiController}`);\r\n    }\r\n\r\n    \r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UserManagementService} from '../../backend/common/services/user-management.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {EMAIL_PATTERN} from '../../../../@auth/components';\r\nimport {Location} from '@angular/common';\r\nimport {NbToastrService} from \"@nebular/theme\";\r\nimport {AccessService} from '../../backend/common/services/access.service';\r\n\r\n@Component({\r\n    selector: 'ngx-access-management-form',\r\n    templateUrl: './access-management-form.component.html',\r\n    styleUrls: ['./access-management-form.component.scss'],\r\n})\r\nexport class AccessManagementFormComponent implements OnInit {\r\n\r\n    userForm: FormGroup;\r\n    secondForm: FormGroup;\r\n    thirdForm: FormGroup;\r\n    headerTitle = 'Crear_usuario';\r\n    emailError = null;\r\n    loginError = null;\r\n    identificationError = null;\r\n    public id;\r\n\r\n    get identification() {\r\n        return this.userForm.get('identification');\r\n    }\r\n\r\n    get name() {\r\n        return this.userForm.get('name');\r\n    }\r\n\r\n    get lastName() {\r\n        return this.userForm.get('lastName');\r\n    }\r\n\r\n    get login() {\r\n        return this.userForm.get('login');\r\n    }\r\n\r\n    get email() {\r\n        return this.userForm.get('email');\r\n    }\r\n\r\n    get isActive() {\r\n        return this.userForm.get('isActive');\r\n    }\r\n\r\n    constructor(private userManagementService: UserManagementService,\r\n                private accessService:AccessService,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private location: Location,\r\n                protected toastrService: NbToastrService,\r\n                private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initUserForm();\r\n        this.initsecondform();\r\n        this.loadUser();\r\n    }\r\n\r\n    initUserForm() {\r\n        this.userForm = this.fb.group({\r\n            id: this.fb.control(''),\r\n            identification: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n            name: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n            lastName: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n            login: this.fb.control('', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]),\r\n            isActive: this.fb.control(true, [Validators.required]),\r\n            email: this.fb.control('', [\r\n                Validators.required,\r\n                Validators.pattern(EMAIL_PATTERN),\r\n            ]),\r\n        });\r\n    }\r\n\r\n    initsecondform(){\r\n        this.secondForm = this.fb.group({\r\n            nameAccess: ['', Validators.required],\r\n            logoempresa: [false, Validators.required],\r\n            changepassword:[false, Validators.required],\r\n            thirdparties:[false, Validators.required],\r\n            typeslistbyquery:[false, Validators.required],\r\n            procurator:[false, Validators.required],\r\n            users:[false, Validators.required],\r\n            access:[false, Validators.required],\r\n            setting:[false, Validators.required],\r\n            sentto:[false, Validators.required],\r\n            monitoring:[false, Validators.required],\r\n            individual:[false, Validators.required],\r\n            massive:[false, Validators.required],\r\n            type:[false, Validators.required],\r\n            manager:[false, Validators.required],\r\n            historyreport:[false, Validators.required],\r\n            getlog:[false, Validators.required],\r\n            queriesandmatches:[false, Validators.required],\r\n            coincidencedetailing:[false, Validators.required],\r\n            viewpastconsultations:[false, Validators.required],\r\n            certificationlistupdates:[false, Validators.required],\r\n            parameterscategory:[false, Validators.required],\r\n            news:[false, Validators.required],\r\n            roi:[false, Validators.required],\r\n            faqs:[false, Validators.required],\r\n            signal:[false, Validators.required],\r\n        });\r\n    }\r\n\r\n\r\n\r\n    loadUser() {\r\n        this.id = this.route.snapshot.paramMap.get('id');\r\n        if (this.id  != null) {\r\n            this.headerTitle = 'Actualizar_usuario';\r\n\r\n            this.accessService.getPermissionsByAccessId(this.id)\r\n                .subscribe(response => {\r\n                    let access = response;\r\n                    delete access.accessId;\r\n                    console.log(access);\r\n                    this.secondForm.setValue(access)\r\n                    this.secondForm.get('nameAccess').disable();\r\n                }, error => {\r\n                    this.toastrService.danger('', 'Usuario no econtrado', {\r\n                        icon: '',\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    save() {\r\n        console.log(this.secondForm.value);\r\n        if(this.id == null){\r\n            this.accessService.createAccessByCompany(this.secondForm.value).subscribe(()=>{\r\n                //console.log(\"enviado\");\r\n                this.router.navigate([`/pages/management/access/`]);\r\n            })\r\n        }\r\n        else{\r\n            let data = {...this.secondForm.value,accessId:this.id}\r\n            this.accessService.updateAccess(data).subscribe(()=>{\r\n                //console.log(\"enviado\");\r\n                this.router.navigate([`/pages/management/access/`]);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    back($event: MouseEvent) {\r\n        $event.preventDefault();\r\n        this.location.back();\r\n    }\r\n\r\n    private setupErrorResponse(errorResponse) {\r\n        const errorObj = errorResponse.error.errors;\r\n        if (errorObj.hasOwnProperty('email'))\r\n            this.emailError = errorObj.email;\r\n\r\n        if (errorObj.hasOwnProperty('login'))\r\n            this.loginError = errorObj.login;\r\n\r\n        if (errorObj.hasOwnProperty('identification'))\r\n            this.identificationError = errorObj.identification;\r\n    }\r\n\r\n    private clearErrors() {\r\n        this.emailError = null;\r\n        this.loginError = null;\r\n        this.identificationError = null;\r\n    }\r\n\r\n\r\n    public  onSecondSubmit() {\r\n        this.secondForm.markAsDirty();\r\n    }\r\n\r\n    public getPermissionsByUser(id : string){\r\n\r\n        this.userManagementService.getPermissionsByUser(id).subscribe( roles => {\r\n        //Se escoge unicamente el objeto que nos interesa el atributo status\r\n        Object.keys(roles).map(function(key, index) {\r\n            if(key!=\"user\")\r\n            roles[key] = roles[key][0]['status'];\r\n        });\r\n        //se elimina el atributo user debido a que no corresponde al modelo del secondform y asi utilizar la propiedad setvalue de formgroup\r\n        delete roles.user;\r\n        this.secondForm.setValue(roles)\r\n        console.log(roles);\r\n        \r\n        });\r\n    } \r\n\r\n    \r\n\r\n}\r\n","<div class=\"col-lg-12\" xmlns=\"http://www.w3.org/1999/html\">\r\n    <nb-card>\r\n        <!--<nb-card-header>Crear usuario</nb-card-header>-->\r\n        <nb-card-header>\r\n            <nav class=\"navigation\">\r\n                <a href=\"#\" (click)=\"back($event)\" class=\"link back-link\" aria-label=\"Back\">\r\n                    <nb-icon icon=\"arrow-back\"></nb-icon>\r\n                </a>\r\n                {{ \"AccessComponent.\"+headerTitle | translate}}\r\n            </nav>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div class=\"steppers-container row\">\r\n                <div class=\"col-md-12 col-lg-12 col-xxxl-12\">                        \r\n                          <form [formGroup]=\"secondForm\" (ngSubmit)=\"onSecondSubmit()\" >\r\n                            <div class=\"form-group row offset-md-3 col-sm-6\">\r\n                              <label for=\"inputPassword\" class=\" col-sm-2 col-form-label font-weight-bolder\">{{ \"AccessComponent.Nombre_rol\" | translate}}</label>\r\n                              <div class=\"col-sm-10\">\r\n                                <input type=\"text\" formControlName=\"nameAccess\" class=\"form-control\" id=\"inputPassword\">\r\n                              </div>\r\n                            </div>\r\n                            <!-- Encabezados-->\r\n                            <nb-accordion multi>\r\n                              <!-- Item Modulo Configuracion -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Configuracion\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Logo Empresa</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['logoempresa']\"\r\n                                        formControlName=\"logoempresa\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Cambiar contraseña</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['changepassword']\"\r\n                                      formControlName=\"changepassword\">\r\n                                      </nb-toggle>\r\n                                  </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                            <!-- Item Modulo Administracion -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Administracion\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Tipo Terceros</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['thirdparties']\"\r\n                                        formControlName=\"thirdparties\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Tipos Lista por Consulta</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['typeslistbyquery']\"\r\n                                      formControlName=\"typeslistbyquery\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Procuraduria</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['procurator']\"\r\n                                      formControlName=\"procurator\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Usuarios</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['users']\"\r\n                                      formControlName=\"users\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Accesos</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['access']\"\r\n                                      formControlName=\"access\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                            <!-- Item Modulo Notificaciones -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Notificaciones\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Configuración</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['setting']\"\r\n                                        formControlName=\"setting\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Enviadas</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['sentto']\"\r\n                                      formControlName=\"sentto\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Monitoreo</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['monitoring']\"\r\n                                      formControlName=\"monitoring\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Consultas -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Consultas\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Individual</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['individual']\"\r\n                                        formControlName=\"individual\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Masiva</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['massive']\"\r\n                                      formControlName=\"massive\">\r\n                                      </nb-toggle>\r\n                                  </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Listas Propias -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Listas Propias\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Tipo</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['type']\"\r\n                                        formControlName=\"type\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Administrar</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['manager']\"\r\n                                      formControlName=\"manager\">\r\n                                      </nb-toggle>\r\n                                  </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Reportes -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Reportes\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Consulta Reporte Historico</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['historyreport']\"\r\n                                        formControlName=\"historyreport\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Consultar Log</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['getlog']\"\r\n                                      formControlName=\"getlog\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Consultas y Coincidencias</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['queriesandmatches']\"\r\n                                      formControlName=\"queriesandmatches\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Detallado de Coincidencias</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['coincidencedetailing']\"\r\n                                      formControlName=\"coincidencedetailing\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Ver Consultas Realizadas</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['viewpastconsultations']\"\r\n                                      formControlName=\"viewpastconsultations\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Certificación Actualizacion Listas</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['certificationlistupdates']\"\r\n                                      formControlName=\"certificationlistupdates\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Perfilamiento de Terceros -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Perfilamiento de Terceros\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Parametrizar variables y categorías</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['parameterscategory']\"\r\n                                        formControlName=\"parameterscategory\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Extras -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Extras\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Noticias</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['news']\"\r\n                                        formControlName=\"news\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Registrar ROI/Denuncia</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['roi']\"\r\n                                        formControlName=\"roi\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>FAQs</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['faqs']\"\r\n                                        formControlName=\"faqs\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Señales de alerta</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['signal']\"\r\n                                        formControlName=\"signal\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                            </nb-accordion>\r\n                            \r\n\r\n                            <div class=\"nav justify-content-center pt-2\">\r\n                               \r\n                                <button nbButton status=\"primary\" [disabled]=\"!secondForm.valid\" (click)=\"save()\" hero>Guardar</button>\r\n                            </div>\r\n                          </form>\r\n\r\n                </div>\r\n            </div>\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n         \r\n        </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output, ɵRender3ComponentRef } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ToggleComponent } from '../../../../@components/editors/toggle/toggle.component';\r\nimport { CompanytypeListService } from '../../backend/common/services/companytypeList.service';\r\nimport { ToasterConfig } from 'angular2-toaster';\r\nimport { NbComponentStatus, NbGlobalLogicalPosition, NbGlobalPhysicalPosition, NbGlobalPosition, NbToastrService } from '@nebular/theme';\r\nimport { CompanyTypeListDTO, CompanyTypeListsDTO } from '../../models/CompanyTypeListDTO';\r\n@Component({\r\n  selector: 'ngx-companytypelist',\r\n  templateUrl: './companytypelist.component.html',\r\n  styleUrls: ['./companytypelist.component.scss']\r\n})\r\nexport class CompanytypelistComponent implements OnInit {\r\n\r\n  //#region Variables Toast\r\n  config: ToasterConfig;\r\n  index = 1;\r\n  destroyByClick = true;\r\n  duration = 2000;\r\n  hasIcon = true;\r\n  position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_RIGHT;\r\n  preventDuplicates = false;\r\n  status: NbComponentStatus = 'primary';\r\n\r\n  title = 'HI there!';\r\n  content = `I'm cool toaster!`;\r\n\r\n  types: NbComponentStatus[] = [\r\n    'primary',\r\n    'success',\r\n    'info',\r\n    'warning',\r\n    'danger',\r\n  ];\r\n  positions: string[] = [\r\n    NbGlobalPhysicalPosition.TOP_RIGHT,\r\n    NbGlobalPhysicalPosition.TOP_LEFT,\r\n    NbGlobalPhysicalPosition.BOTTOM_LEFT,\r\n    NbGlobalLogicalPosition.TOP_END,\r\n    NbGlobalLogicalPosition.TOP_START,\r\n    NbGlobalLogicalPosition.BOTTOM_END,\r\n    NbGlobalLogicalPosition.BOTTOM_START,\r\n  ];\r\n\r\n  quotes = [\r\n    { title: null, body: 'We rock at Angular' },\r\n    { title: null, body: 'Titles are not always needed' },\r\n    { title: null, body: 'Toastr rock!' },\r\n  ];\r\n  //#endregion\r\n  public data: CompanyTypeListsDTO = new CompanyTypeListsDTO();  \r\n  public source: LocalDataSource;  \r\n  public change: boolean;  \r\n  public settings = {\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n    },\r\n\r\n    columns: {\r\n      search: {\r\n        title: 'Estado',\r\n        type: 'custom',\r\n        width:'5%',\r\n        filter:false,\r\n        renderComponent: ToggleComponent,  onComponentInitFunction: (instance) => {\r\n          instance.save.subscribe(row => {\r\n          row.search= row.search ? false : true\r\n            this.updateStatus(row)\r\n          });\r\n        },      \r\n      },\r\n      listTypeId: {\r\n        title: 'No.',\r\n        type: 'number',\r\n        filter: true,\r\n        width: '3%'\r\n\r\n      },\r\n      name: {\r\n        title: 'Nombre Tipo Lista',\r\n        type: 'string',\r\n        filter: true\r\n      },\r\n      listType: {\r\n        title: 'Grupo lista',\r\n        type: 'html',\r\n        filter: true,\r\n        valuePrepareFunction: (cell, row) => {\r\n         return this._sanitizer.bypassSecurityTrustHtml(`<h6 class=\"text-black p-t-0 qlz-line-height text-center\" style=\"background:${row.listType.listGroup.color}\"><strong>${row.listType.listGroup.name} </strong> </h6>`);   \r\n            \r\n        },\r\n        filterFunction: (cell?: any, search?: string) => {\r\n          console.log(\"cell\",cell.listGroup.name)\r\n         return cell.listGroup.name.includes(search);\r\n        }\r\n      },   \r\n      country: {\r\n        title: 'Pais',\r\n        type: 'html',\r\n        filter: true,\r\n        valuePrepareFunction: (cell, row) => {\r\n         return this._sanitizer.bypassSecurityTrustHtml(`${row.listType.country.name}`); \r\n            \r\n        },        \r\n      },   \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private _companytypeService: CompanytypeListService,\r\n    private _sanitizer: DomSanitizer,\r\n    private toastrService: NbToastrService,\r\n\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n  //#region Methods \r\n  private initialize() {\r\n\r\n    this.getCompany();\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Metodos SmartTableData\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Esta seguro de eliminar el registro')) {\r\n      event.confirm.resolve();\r\n      //this.deleteThirdPartyType(event.data.id.toString());\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n    console.log(event.data.id);\r\n\r\n  }\r\n  onEdit(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  onSaveConfirm(event): void {\r\n    console.log(event);\r\n    var datatemporal = event.source.data\r\n    if (!this.isObjEmpty(datatemporal)) {\r\n      //this.updateThirdPartyType(event.newData);\r\n      event.confirm.resolve(event.newData);\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCreateConfirm(event): void {\r\n    console.log(event);\r\n    var datatemporal = event.source.data\r\n    if (!this.isObjEmpty(datatemporal)) {\r\n      //this.createThirdPartyType(event.newData);\r\n      event.confirm.resolve(event.newData);\r\n    } else {\r\n      //this.showToast(\"danger\", \"Error\",\"Debe ingresar todos los valores\");\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n //#endregion\r\n\r\n\r\n  //#region Metodos Privados \r\n  //#endregion\r\n  setCheckedStatus(checked) {\r\n    var status =checked.target.checked;\r\n     this._companytypeService.updateRangeStatus(status).subscribe(res => {\r\n      this.showToast(\"success\", 'Tipos de listas por consulta', \"Actualizados con Exito\");          \r\n      this.getCompany()\r\n         error => {\r\n          this.showToast(\"danger\", null, error)\r\n        }\r\n    });\r\n  }\r\n\r\n  //#region Services\r\n  //#region Get\r\n  public getCompany() {\r\n   \r\n      this._companytypeService.getTypeList().subscribe((res: CompanyTypeListsDTO) => {\r\n        this.data = res;\r\n        this.source = new LocalDataSource(this.data as any);        \r\n      })\r\n  }\r\n\r\n  //#endregion\r\n  //#region Update\r\n\r\n\r\n  private updateStatus(CompanyTypeListDTO:CompanyTypeListDTO) {\r\n    \r\n    this._companytypeService.updateStatus(CompanyTypeListDTO).subscribe(res => {\r\n      this.showToast(\"success\", CompanyTypeListDTO.name, \"Actualizada con Exito\");                \r\n        error => {\r\n          this.showToast(\"danger\", null, error)\r\n        }\r\n    });\r\n  }\r\n  //endregion\r\n  //#endregion\r\n\r\n  //#region Validacion\r\n\r\n  //Todo: Valida si los registro de la tabla estan vacios\r\n  private isObjEmpty(obj) {\r\n    for (var prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) return false;\r\n    }\r\n    return true;\r\n  }\r\n  //Todo : Muestra toast segun mensaje\r\n  private showToast(type: NbComponentStatus, title: string, body: string) {\r\n    const hasIcon = this.hasIcon ? {} : { icon: 'alert-circle-outline' };\r\n    const config = {\r\n      status: type,\r\n      destroyByClick: this.destroyByClick,\r\n      duration: this.duration,\r\n      position: this.position,\r\n      preventDuplicates: this.preventDuplicates,\r\n      ...hasIcon,\r\n    };\r\n    const titleContent = title ? `. ${title}` : '';\r\n\r\n    this.index += 1;\r\n    this.toastrService.show(\r\n      body,\r\n      title,\r\n      config);\r\n  }\r\n  //#endregion\r\n\r\n\r\n\r\n}","<nb-card>\r\n    <nb-card-header>\r\n        {{\"ManageModule.ADMINISTRAR_TIPOS_DE_LISTAS_POR_CONSULTA\"| translate }}\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n        <nb-toggle labelPosition=\"start\" (change)=\"setCheckedStatus($event)\">Activación / inactivación masiva</nb-toggle>\r\n        <ng2-smart-table #table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"data\" (deleteConfirm)=\"onDeleteConfirm($event)\" (editConfirm)=\"onSaveConfirm($event)\" (createConfirm)=\"onCreateConfirm($event)\"></ng2-smart-table>\r\n    </nb-card-body>\r\n</nb-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LocalDataSource, Ng2SmartTableComponent } from 'ng2-smart-table';\r\nimport { ToggleComponent } from '../../../../@components/editors/toggle/toggle.component';\r\n\r\nimport { NbComponentStatus, NbGlobalLogicalPosition, NbGlobalPhysicalPosition, NbGlobalPosition, NbToastrService } from '@nebular/theme';\r\nimport { ToasterConfig } from 'angular2-toaster';\r\n// import { thirdPartyManageService } from '../../backend/common/services/ThirdPartyManage.service';\r\nimport { ThirdPartyTypeListDTO } from '../../models/ThirdPartyTypeDTO';\r\nimport { SmartTableDatepickerComponent, SmartTableDatepickerRenderComponent } from '../../../../@components/editors/smart-table-datepicker/smart-table-datepicker.component';\r\nimport { EditCellDefault } from 'ng2-smart-table/lib/components/cell/cell-edit-mode/edit-cell-default';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {thirdPartyManageService} from \"../../backend/common/services/thirdPartyManage.service\";\r\n\r\n@Component({\r\n  selector: 'ngx-thirdpartymanage',\r\n  templateUrl: './thirdpartymanage.component.html',\r\n  styleUrls: ['./thirdpartymanage.component.scss']\r\n})\r\nexport class ThirdpartymanageComponent implements OnInit {  \r\n  @ViewChild('table') table: Ng2SmartTableComponent;\r\n  public selectedRows = [];\r\n  //#region Variables Toast\r\n  config: ToasterConfig;\r\n\r\n  index = 1;\r\n  destroyByClick = true;\r\n  duration = 2000;\r\n  hasIcon = true;\r\n  position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_RIGHT;\r\n  preventDuplicates = false;\r\n  status: NbComponentStatus = 'primary';\r\n\r\n  title = 'HI there!';\r\n  content = `I'm cool toaster!`;\r\n\r\n  types: NbComponentStatus[] = [\r\n    'primary',\r\n    'success',\r\n    'info',\r\n    'warning',\r\n    'danger',\r\n  ];\r\n  positions: string[] = [\r\n    NbGlobalPhysicalPosition.TOP_RIGHT,\r\n    NbGlobalPhysicalPosition.TOP_LEFT,\r\n    NbGlobalPhysicalPosition.BOTTOM_LEFT,\r\n    NbGlobalPhysicalPosition.BOTTOM_RIGHT,\r\n    NbGlobalLogicalPosition.TOP_END,\r\n    NbGlobalLogicalPosition.TOP_START,\r\n    NbGlobalLogicalPosition.BOTTOM_END,\r\n    NbGlobalLogicalPosition.BOTTOM_START,\r\n  ];\r\n\r\n  quotes = [\r\n    { title: null, body: 'We rock at Angular' },\r\n    { title: null, body: 'Titles are not always needed' },\r\n    { title: null, body: 'Toastr rock!' },\r\n  ];\r\n  //#endregion\r\n  settings = {\r\n\r\n    actions:{\r\n      add:true,\r\n      edit:true,\r\n      delete:false,      \r\n        \r\n    }\r\n    ,\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmCreate: true\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmSave: true\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },   \r\n    columns: {\r\n      name: {\r\n        title: 'Nombre Tercero',\r\n        type: 'string',\r\n      },      \r\n      createdAt: {\r\n        title: 'Fecha de registro',\r\n        type: 'string',        \r\n        addable: false,\r\n        editable:false,         \r\n        width: '250px',\r\n        filter: false,\r\n        sortDirection: 'desc',\r\n        \r\n        \r\n      },\r\n      status: {\r\n        title: 'Estado',\r\n        type:'custom',\r\n        renderComponent: ToggleComponent,  onComponentInitFunction: (instance) => {          \r\n          instance.save.subscribe(row => {\r\n            row.status= row.status ? false : true\r\n            this.updateThirdPartyType(row)\r\n          });\r\n        },            \r\n        editor:{\r\n          type: 'list',\r\n          config:{\r\n            list:[\r\n              {title: 'Inactivo', value:false},\r\n              {title: 'Activo', value:true}            \r\n            ]\r\n          },\r\n          width:'5%',\r\n          filter:false\r\n        },\r\n      },      \r\n    },\r\n  };\r\n  source: LocalDataSource = new LocalDataSource();\r\n  public data :ThirdPartyTypeListDTO = new ThirdPartyTypeListDTO();\r\n  public lang:string;\r\n    \r\n  constructor(\r\n    private toastrService: NbToastrService,\r\n    private _thirdPartyManageService:thirdPartyManageService,\r\n    private translate: TranslateService\r\n    ) \r\n  { }\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.traductorlocal();\r\n  }\r\n\r\n  private initialize() {\r\n\r\n    this.getByCompanyID();\r\n    \r\n  }\r\n\r\n  //#region Metodos SmartTableData\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Esta seguro de eliminar el registro')) {\r\n      event.confirm.resolve();\r\n      this.deleteThirdPartyType(event.data.id.toString());\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n    \r\n    \r\n  }\r\n  onEdit(event){\r\n\r\n  } \r\n\r\n  onSaveConfirm(event): void  {\r\n    var datatemporal = event.newData\r\n    if(!this.isObjEmpty(datatemporal.name)){\r\n      this.updateThirdPartyType(event.newData);\r\n      event.confirm.resolve(event.newData);\r\n    }else{\r\n      this.showToast(\"danger\", \"Error\",\"El campo Nombre Tercero es obligatorio\");\r\n      event.confirm.reject();\r\n    }\r\n    this.getByCompanyID();\r\n  }\r\n\r\n  onCreateConfirm(event): void{\r\n    console.log(event);\r\n    var datatemporal = event.newData\r\n    if(!this.isObjEmpty(datatemporal.name)){\r\n      this.createThirdPartyType(event.newData);\r\n      event.confirm.resolve(event.newData);      \r\n    }else{\r\n      this.showToast(\"danger\", \"Error\",\"El campo Nombre Tercero es obligatorio\");\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onRowSelect(event): void   {\r\n    \r\n  }\r\n  //#endregion\r\n\r\n  //#region Metodos Privados\r\n  public ChangeStatus(event: any): void {\r\n    const id = event\r\n\r\n    \r\n  }\r\n  public traductorlocal(){\r\n    this.lang = localStorage.getItem ('lang');\r\n    let currentlang = this.translate.currentLang\r\n    currentlang=this.lang\r\n    this.translate.use(currentlang);\r\n  }\r\n  //#endregion\r\n\r\n  //#region Validacion\r\n\r\n //Todo: Valida si los registro de la tabla estan vacios\r\n  private  isObjEmpty(obj) {\r\n    for (var prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) return false;\r\n    }\r\n    return true;\r\n  }\r\n  //Todo : Muestra toast segun mensaje\r\n  private showToast(type: NbComponentStatus, title: string, body: string) {\r\n    const hasIcon = this.hasIcon ? {} : { icon: 'alert-circle-outline' };\r\n    const config = {\r\n      status: type,\r\n      destroyByClick: this.destroyByClick,\r\n      duration: this.duration,\r\n      position: this.position,\r\n      preventDuplicates: this.preventDuplicates,\r\n      ...hasIcon,\r\n    };\r\n    const titleContent = title ? `. ${title}` : '';\r\n\r\n    this.index += 1;\r\n    this.toastrService.show(\r\n      body,\r\n      title,\r\n      config);\r\n  }\r\n//#endregion\r\n\r\n//#region Servicios\r\n  //#region Get\r\n  public getByCompanyID(CompanyId?: string){\r\n    this._thirdPartyManageService.getByCompanyID().subscribe((response:ThirdPartyTypeListDTO) =>{\r\n    this.data = response;\r\n    this.source = new LocalDataSource(this.data as any);\r\n    // console.log(this.settings);\r\n    \r\n    })\r\n  }\r\n  //endregion\r\n  //#region Post\r\n  public createThirdPartyType(thirdPartyTypeListDTO:ThirdPartyTypeListDTO){\r\n    this._thirdPartyManageService.createThirdPartyType(thirdPartyTypeListDTO).subscribe(res => {\r\n      var tp= thirdPartyTypeListDTO;\r\n      this.showToast(\"success\",tp[\"name\"],\"Guardado Exitoso\")\r\n      this.getByCompanyID()\r\n    });\r\n  }\r\n  //endregion\r\n  //#region Update\r\n  public updateThirdPartyType(thirdPartyTypeListDTO:ThirdPartyTypeListDTO){\r\n    this._thirdPartyManageService.updateThirdPartyType(thirdPartyTypeListDTO).subscribe(res => {\r\n      var tp= thirdPartyTypeListDTO\r\n      this.showToast(\"success\", tp[\"name\"],\"Actualización Exitosa\")\r\n      console.log(\"Enviado\");\r\n    });\r\n  }\r\n  //endregion\r\n  //#region Delete\r\n  public deleteThirdPartyType(id:string){\r\n    this._thirdPartyManageService.deleteThirdPartyType(id).subscribe(res => {\r\n      this.showToast(\"success\",'Tipo tercero',\"Eliminado Exitoso\")      \r\n    });\r\n  }\r\n  //endregion\r\n//#endregion\r\n  \r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    {{\"ManageModule.Administración_Tipo_Tercero\"| translate }}\r\n    \r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n      <ng2-smart-table #table class=\"example-smart-table\" \r\n      [settings]=\"settings\" \r\n      [source]=\"data\"\r\n      (deleteConfirm)=\"onDeleteConfirm($event)\"\r\n      (editConfirm)=\"onSaveConfirm($event)\"\r\n      (createConfirm)=\"onCreateConfirm($event)\"\r\n      (rowSelect)=\"onRowSelect($event)\"\r\n      \r\n      >\r\n      </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UserManagementService} from '../../backend/common/services/user-management.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {EMAIL_PATTERN} from '../../../../@auth/components';\r\nimport {Location} from '@angular/common';\r\nimport {User} from '../../models/user';\r\nimport {NbToastrService} from \"@nebular/theme\";\r\nimport {RoleUserDTO} from '../../models/RoleUserDTO';\r\nimport {AccessService} from '../../backend/common/services/access.service';\r\n\r\n@Component({\r\n    selector: 'ngx-user-management-form',\r\n    templateUrl: './user-management-form.component.html',\r\n    styleUrls: ['./user-management-form.component.scss'],\r\n})\r\nexport class UserManagementFormComponent implements OnInit {\r\n\r\n    public userForm: FormGroup;\r\n    public secondForm: FormGroup;\r\n    public thirdForm: FormGroup;\r\n    public headerTitle = 'Crear usuario';\r\n    public BtnResetPassword: boolean = false;\r\n    public emailError = null;\r\n    public loginError = null;\r\n    public accessrol = [];\r\n    public identificationError = null;\r\n    public selectedAccessDefault;\r\n    public editAdd = \"1\";\r\n    get identification() {\r\n        return this.userForm.get('identification');\r\n    }\r\n\r\n    get name() {\r\n        return this.userForm.get('name');\r\n    }\r\n\r\n    get lastName() {\r\n        return this.userForm.get('lastName');\r\n    }\r\n\r\n    get login() {\r\n        return this.userForm.get('login');\r\n    }\r\n\r\n    get email() {\r\n        return this.userForm.get('email');\r\n    }\r\n\r\n    get isActive() {\r\n        return this.userForm.get('isActive');\r\n    }\r\n\r\n    constructor(private userManagementService: UserManagementService,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private accessService:AccessService,\r\n                private location: Location,\r\n                protected toastrService: NbToastrService,\r\n                private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initUserForm();\r\n        this.initsecondform();\r\n        this.inithirdform();\r\n        this.loadUser();\r\n        this.getAllAccess();\r\n\r\n        console.log('inicio', this.editAdd);\r\n    }\r\n\r\n    initUserForm() {\r\n        this.userForm = this.fb.group({\r\n            id: this.fb.control(''),\r\n            identification: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n            name: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n            lastName: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n            login: this.fb.control('', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]),\r\n            isActive: this.fb.control(true, [Validators.required]),\r\n            email: this.fb.control('', [\r\n                Validators.required,\r\n                Validators.pattern(EMAIL_PATTERN),\r\n            ]),\r\n        });\r\n    }\r\n\r\n    initsecondform(){\r\n        this.secondForm = this.fb.group({\r\n            logoempresa: [false, Validators.required],\r\n            changepassword:[false, Validators.required],\r\n            thirdparties:[false, Validators.required],\r\n            typeslistbyquery:[false, Validators.required],\r\n            procurator:[false, Validators.required],\r\n            users:[false, Validators.required],\r\n            access:[false, Validators.required],\r\n            setting:[false, Validators.required],\r\n            sentto:[false, Validators.required],\r\n            monitoring:[false, Validators.required],\r\n            individual:[false, Validators.required],\r\n            massive:[false, Validators.required],\r\n            type:[false, Validators.required],\r\n            manager:[false, Validators.required],\r\n            historyreport:[false, Validators.required],\r\n            getlog:[false, Validators.required],\r\n            queriesandmatches:[false, Validators.required],\r\n            coincidencedetailing:[false, Validators.required],\r\n            viewpastconsultations:[false, Validators.required],\r\n            certificationlistupdates:[false, Validators.required],\r\n            parameterscategory:[false, Validators.required],\r\n            news:[false, Validators.required],\r\n            roi:[false, Validators.required],\r\n            faqs:[false, Validators.required],\r\n            signal:[false, Validators.required],\r\n        });\r\n    }\r\n\r\n    inithirdform(){\r\n        this.thirdForm = this.fb.group({\r\n            thirdCtrl: ['', Validators.required],\r\n        });\r\n    }\r\n\r\n    loadUser() {\r\n        const id = this.route.snapshot.paramMap.get('id');\r\n        if (id != null) {\r\n            this.headerTitle = 'Actualizar usuario';\r\n            this.BtnResetPassword = true;\r\n            this.editAdd = \"0\";\r\n\r\n            this.userManagementService.get(+id)\r\n                .subscribe(response => {\r\n                    const user = response.data;\r\n                    this.userForm.setValue({\r\n                        id: user.id ? user.id : '',\r\n                        identification: user.identification ? user.identification : '',\r\n                        name: user.name ? user.name : '',\r\n                        lastName: user.lastName ? user.lastName : '',\r\n                        login: user.login ? user.login : '',\r\n                        email: user.email,\r\n                        isActive: user.isActive,\r\n                    });\r\n                    this.getPermissionsByUser(id);\r\n                }, error => {\r\n                    this.toastrService.danger('', 'Usuario no econtrado', {\r\n                        icon: '',\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    ResetPassword(){\r\n        const user: User = this.userForm.value;\r\n        let id = null ;\r\n        this.route.snapshot.paramMap.get('id') ? id = this.route.snapshot.paramMap.get('id') : delete user.id;\r\n        \r\n        if(id != null){\r\n            this.userManagementService.ResetPassword(id, user).subscribe((user) => {\r\n                \r\n                this.toastrService.success('', '¡Reinicio de Contraseña Exitoso!', {\r\n                    icon: '',\r\n                });\r\n                this.router.navigate([`/pages/management/users`]);\r\n                this.clearErrors();\r\n            }, errorResponse => {\r\n                this.setupErrorResponse(errorResponse);\r\n            });\r\n        }\r\n    }\r\n\r\n    save() {\r\n        let y = JSON.parse(JSON.stringify(this.secondForm.value));        \r\n        Object.keys(y).map(function(key, index) {\r\n            y[key] = [{status:y[key],id:index+1}];\r\n        });\r\n        console.log(y);\r\n        let rolesuser:RoleUserDTO = y;\r\n        \r\n        const user: User = this.userForm.value;\r\n        let id = null ;\r\n        this.route.snapshot.paramMap.get('id') ? id = this.route.snapshot.paramMap.get('id') : delete user.id;\r\n\r\n        if (id == null) {\r\n            this.userManagementService.create(user).subscribe((user:any) => {\r\n                this.userForm.reset();\r\n                rolesuser.user = user.data.id;\r\n                this.userManagementService.createRolesUser(rolesuser).subscribe(()=>{\r\n                });\r\n                this.toastrService.success('', '¡Registro exitoso!', {\r\n                    icon: '',\r\n                });\r\n                this.clearErrors();                                  \r\n                this.router.navigate([`/pages/management/users`]);\r\n            }, errorResponse => {\r\n                this.toastrService.warning('', 'El usuario ya se encuentra registrado o se a registrado con un correo ya existente', {\r\n                    icon: '',\r\n                });\r\n                this.userForm.controls['email'].setValue('');\r\n                this.setupErrorResponse(errorResponse);\r\n            });\r\n\r\n        } else {\r\n            this.userManagementService.update(+id, user).subscribe((user) => {\r\n                rolesuser.user =  parseInt(id);\r\n                this.userManagementService.createRolesUser(rolesuser).subscribe(()=>{\r\n                    this.toastrService.success('', '¡Actualizacion Exitosa!', {\r\n                        icon: '',\r\n                    });\r\n                    this.router.navigate([`/pages/management/users`]);\r\n\r\n                });\r\n                // this.router.navigate([`/pages/management/users`]);\r\n                this.clearErrors();\r\n            }, errorResponse => {\r\n                this.setupErrorResponse(errorResponse);\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    back($event: MouseEvent) {\r\n        $event.preventDefault();\r\n        this.location.back();\r\n    }\r\n\r\n    private setupErrorResponse(errorResponse) {\r\n        const errorObj = errorResponse.error.errors;\r\n        if (errorObj.hasOwnProperty('email'))\r\n            this.emailError = errorObj.email;\r\n\r\n        if (errorObj.hasOwnProperty('login'))\r\n            this.loginError = errorObj.login;\r\n\r\n        if (errorObj.hasOwnProperty('identification'))\r\n            this.identificationError = errorObj.identification;\r\n    }\r\n\r\n    private clearErrors() {\r\n        this.emailError = null;\r\n        this.loginError = null;\r\n        this.identificationError = null;\r\n    }\r\n\r\n    public onFirstSubmit() {\r\n        this.userForm.markAsDirty();\r\n    }\r\n\r\n    public  onSecondSubmit() {\r\n        this.secondForm.markAsDirty();\r\n    }\r\n\r\n    public getPermissionsByUser(id : string){\r\n\r\n        this.userManagementService.getPermissionsByUser(id).subscribe( roles => {\r\n        //Se escoge unicamente el objeto que nos interesa el atributo status\r\n        Object.keys(roles).map(function(key, index) {\r\n            if(key!=\"user\")\r\n            roles[key] = roles[key][0]['status'];\r\n        });\r\n        //se elimina el atributo user debido a que no corresponde al modelo del secondform y asi utilizar la propiedad setvalue de formgroup\r\n        delete roles.user;\r\n        this.secondForm.setValue(roles)\r\n        console.log(roles);\r\n        \r\n        });\r\n    } \r\n\r\n    public getAllAccess(){\r\n        this.accessService.getByCompany().subscribe((result)=>{\r\n            this.accessrol = result;\r\n            console.log('roles', this.accessrol);\r\n            \r\n            this.selectedAccessDefault = this.accessrol.filter(x => x.name == \"Personalizar\");\r\n            this.selectedAccessDefault = this.selectedAccessDefault[0].id\r\n        });        \r\n    }\r\n\r\n    public changeaccess(e){\r\n\r\n    this.accessService.getPermissionsByAccessId(e).subscribe((result)=>{\r\n        //console.log(result);\r\n        delete result.accessId\r\n        delete result.nameAccess\r\n        this.secondForm.setValue(result)\r\n        \r\n    })\r\n\r\n    }\r\n    \r\n\r\n}\r\n","<div class=\"col-lg-12\" xmlns=\"http://www.w3.org/1999/html\">\r\n    <nb-card>\r\n        <!--<nb-card-header>Crear usuario</nb-card-header>-->\r\n        <nb-card-header>\r\n            <nav class=\"navigation\">\r\n                <a href=\"#\" (click)=\"back($event)\" class=\"link back-link\" aria-label=\"Back\">\r\n                    <nb-icon icon=\"arrow-back\"></nb-icon>\r\n                </a>\r\n                {{headerTitle}}\r\n            </nav>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div class=\"steppers-container row\">\r\n                <div class=\"col-md-12 col-lg-12 col-xxxl-12\">\r\n\r\n                      <nb-stepper #stepper>\r\n                        <nb-step [stepControl]=\"userForm\" label=\"Datos basicos\">\r\n                            <!--Datos Basico-->\r\n                            <form [formGroup]=\"userForm\">\r\n                                <!-- Division Nombre Apellido-->\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"form-group col-md-6 col-lg-6 col-xxxl-6 \">\r\n                                        <label class=\"label\" for=\"firstName\">Nombres</label>\r\n                                        <input fullWidth nbInput id=\"firstName\" formControlName=\"name\"\r\n                                               [status]=\"(name?.hasError('minlength') || name?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                                               class=\"form-control\" placeholder=\"Ingrese el nombre\">\r\n                                        <ngx-validation-message label=\"First Name\"\r\n                                                                [showMinLength]=\"name?.hasError('minlength')\"\r\n                                                                [showMaxLength]=\"name?.hasError('maxlength')\" minLength=3\r\n                                                                maxLength=20>\r\n                                        </ngx-validation-message>\r\n                                    </div>\r\n                                    <div class=\"form-group  col-md-6 col-lg-6 col-xxxl-6\">\r\n                                        <label class=\"label\" for=\"lastName\">Apellidos</label>\r\n                                        <input fullWidth nbInput id=\"lastName\" formControlName=\"lastName\"\r\n                                               [status]=\"(lastName?.hasError('minlength') || lastName?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                                               class=\"form-control\" placeholder=\"Ingrese el apellido\">\r\n                                        <ngx-validation-message label=\"Last Name\"\r\n                                                                [showMinLength]=\"lastName?.hasError('minlength')\"\r\n                                                                [showMaxLength]=\"lastName?.hasError('maxlength')\" minLength=3\r\n                                                                maxLength=20></ngx-validation-message>\r\n                                    </div>\r\n                                </div>\r\n                                    <!-- Division Número Documento && Correo Electrónico-->\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"form-group col-md-6 col-lg-6 col-xxxl-6\">\r\n                                        <label class=\"label\" for=\"identification\">Número Documento</label>\r\n                                        <input fullWidth nbInput id=\"identification\" formControlName=\"identification\"\r\n                                               [status]=\"(identification?.hasError('minlength') || identification?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                                               placeholder=\"Ingrese el número Documento\">\r\n                                        <ngx-validation-message label=\"First Name\"\r\n                                                                [showMinLength]=\"identification?.hasError('minlength')\"\r\n                                                                [showMaxLength]=\"identification?.hasError('maxlength')\" minLength=3\r\n                                                                maxLength=20></ngx-validation-message>\r\n                                        <p class=\"error-message caption status-danger\"\r\n                                           *ngIf=\"identificationError\">\r\n                                            {{identificationError}}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"form-group col-md-6 col-lg-6 col-xxxl-6\">\r\n                                        <label class=\"label\" for=\"inputEmail\">Correo Electrónico</label>\r\n                                        <input fullWidth nbInput id=\"inputEmail\" formControlName=\"email\"\r\n                                               [status]=\"(email?.errors?.required || email?.hasError('pattern')) && email.touched ? 'danger' : 'primary'\"\r\n                                               class=\"form-control\"\r\n                                               placeholder=\"Ingrese el correo electrónico\">\r\n                                        <ngx-validation-message label=\"Email\"\r\n                                                                [showPattern]=\"email?.hasError('pattern') && email.touched\"\r\n                                                                [showRequired]=\"email?.errors?.required && email.touched\" min=1\r\n                                                                max=120></ngx-validation-message>\r\n                    \r\n                                        <p class=\"error-message caption status-danger\"\r\n                                           *ngIf=\"emailError\">\r\n                                            {{emailError}}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Division Usuario && Correo Estado-->\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"form-group col-md-6 col-lg-6 col-xxxl-6\">\r\n                                        <label class=\"label\" for=\"inputLogin\">Usuario</label>\r\n                                        <input fullWidth nbInput id=\"inputLogin\" formControlName=\"login\"\r\n                                               [status]=\"(login?.errors?.required || login?.hasError('minlength') || login?.hasError('maxlength')) && login.touched ? 'danger' : 'primary'\"\r\n                                               class=\"form-control\" placeholder=\"Login\">\r\n                                        <ngx-validation-message label=\"Login\"\r\n                                                                [showMinLength]=\"login?.hasError('minlength')\"\r\n                                                                [showMaxLength]=\"login?.hasError('maxlength')\"\r\n                                                                [showRequired]=\"login?.errors?.required && login.touched\"\r\n                                                                minLength=6\r\n                                                                maxLength=20></ngx-validation-message>\r\n                                        <p class=\"error-message caption status-danger\"\r\n                                           *ngIf=\"loginError\">\r\n                                            {{loginError}}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"form-group col-md-6 col-lg-6 col-xxxl-6\">\r\n                                      <div class=\"row\" >\r\n                                          <div class=\"col-sm\">\r\n                                            <label for=\"isActive\" class=\"label\">Estado</label>\r\n                                                <nb-select\r\n                                                        id=\"isActive\"\r\n                                                        selected=\"1\"\r\n                                                        formControlName=\"isActive\"\r\n                                                        fullWidth>\r\n                                                    <nb-option [value]=\"true\">Activo</nb-option>\r\n                                                    <nb-option [value]=\"false\">Inactivo</nb-option>\r\n                                                </nb-select>\r\n                                          </div>\r\n                                          <div class=\"col-sm\">\r\n                                          <label for=\"isActive\" class=\"label\">Tipo Acceso</label>\r\n                                                <nb-select\r\n                                                        [(selected)]= \"editAdd\"\r\n                                                        placeholder\r\n                                                        placeholder=\"Seleccione Acceso\"\r\n                                                        fullWidth>\r\n                                                    <nb-option *ngFor=\"let access of accessrol\" (click)=\"changeaccess(access.id)\" value=\"{{access.id}}\">{{access.name}}</nb-option>\r\n                                                </nb-select>\r\n\r\n                                          </div>\r\n                                      </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <!-- Boton Siguiente-->\r\n                                <div class=\"nav justify-content-center\">\r\n                                    <button nbButton nbStepperNext outline status=\"primary\" >Siguiente</button>\r\n                                </div>\r\n                            </form>\r\n                        </nb-step>\r\n                        <nb-step [stepControl]=\"secondForm\" label=\"Roles\">\r\n                          <form [formGroup]=\"secondForm\" (ngSubmit)=\"onSecondSubmit()\" class=\"step-container\">\r\n                            <!-- Encabezados-->\r\n                            <nb-accordion multi>\r\n                              <!-- Item Modulo Configuracion -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Configuracion\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Logo Empresa</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['logoempresa']\"\r\n                                        formControlName=\"logoempresa\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Cambiar contraseña</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['changepassword']\"\r\n                                      formControlName=\"changepassword\">\r\n                                      </nb-toggle>\r\n                                  </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                            <!-- Item Modulo Administracion -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Administracion\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Tipo Terceros</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['thirdparties']\"\r\n                                        formControlName=\"thirdparties\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Tipos Lista por Consulta</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['typeslistbyquery']\"\r\n                                      formControlName=\"typeslistbyquery\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Procuraduria</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['procurator']\"\r\n                                      formControlName=\"procurator\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Usuarios</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['users']\"\r\n                                      formControlName=\"users\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Accesos</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['access']\"\r\n                                      formControlName=\"access\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                            <!-- Item Modulo Notificaciones -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Notificaciones\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Configuración</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['setting']\"\r\n                                        formControlName=\"setting\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Enviadas</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['sentto']\"\r\n                                      formControlName=\"sentto\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Monitoreo</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['monitoring']\"\r\n                                      formControlName=\"monitoring\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Consultas -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Consultas\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Individual</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['individual']\"\r\n                                        formControlName=\"individual\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Masiva</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['massive']\"\r\n                                      formControlName=\"massive\">\r\n                                      </nb-toggle>\r\n                                  </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Listas Propias -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Listas Propias\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Tipo</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['type']\"\r\n                                        formControlName=\"type\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Administrar</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['manager']\"\r\n                                      formControlName=\"manager\">\r\n                                      </nb-toggle>\r\n                                  </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Reportes -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Reportes\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Consulta Reporte Historico</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['historyreport']\"\r\n                                        formControlName=\"historyreport\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Consultar Log</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['getlog']\"\r\n                                      formControlName=\"getlog\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Consultas y Coincidencias</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['queriesandmatches']\"\r\n                                      formControlName=\"queriesandmatches\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Detallado de Coincidencias</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['coincidencedetailing']\"\r\n                                      formControlName=\"coincidencedetailing\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Ver Consultas Realizadas</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['viewpastconsultations']\"\r\n                                      formControlName=\"viewpastconsultations\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Certificación Actualizacion Listas</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['certificationlistupdates']\"\r\n                                      formControlName=\"certificationlistupdates\">\r\n                                      </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Perfilamiento de Terceros -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Perfilamiento de Terceros\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Parametrizar variables y categorías</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['parameterscategory']\"\r\n                                        formControlName=\"parameterscategory\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                              <!-- Item Modulo Extras -->\r\n                              <nb-accordion-item [expanded]=\"true\">\r\n                                <nb-accordion-item-header>\r\n                                  Extras\r\n                                </nb-accordion-item-header>\r\n                                <nb-accordion-item-body>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                      <p>Noticias</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['news']\"\r\n                                        formControlName=\"news\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Registrar ROI/Denuncia</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['roi']\"\r\n                                        formControlName=\"roi\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>FAQs</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['faqs']\"\r\n                                        formControlName=\"faqs\">\r\n                                        </nb-toggle>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                      <p>Señales de alerta</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                        <nb-toggle status=\"primary\" class=\"p-2\" [(checked)]=\"secondForm['signal']\"\r\n                                        formControlName=\"signal\">\r\n                                        </nb-toggle>\r\n                                    </div>                                    \r\n                                    <div class=\"col-6\">\r\n                                      <p>Reiniciar Contraseña</p>\r\n                                    </div>\r\n                                    <div class=\"col-6 text-center\">\r\n                                      <button nbButton status=\"danger\" [disabled]=\"!BtnResetPassword\" (click)=\"ResetPassword()\" hero>Reiniciar</button>\r\n                                    </div>\r\n                                  </div>\r\n                                </nb-accordion-item-body>\r\n                              </nb-accordion-item>\r\n                            </nb-accordion>\r\n\r\n                            \r\n                            <!--<div class=\"row show-grid\">\r\n                                <div class=\"col-md-6 col-lg-6 col-xxxl-6 justify-content-center row\">\r\n                                    <nb-toggle status=\"primary\" [checked]=\"secondForm['submodulo']\"\r\n                                                formControlName=\"submodulo\">Administracion\r\n                                    </nb-toggle>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-lg-6 col-xxxl-6 justify-content-center row\">\r\n                                    \r\n                                    <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['submodulo']\"\r\n                                                formControlName=\"submodulo\">Tipo Terceros\r\n                                    </nb-toggle>\r\n                                    <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['submodulo']\"\r\n                                    formControlName=\"submodulo\">Tipos Lista por Consulta\r\n                                    </nb-toggle>\r\n                                    <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['submodulo']\"\r\n                                    formControlName=\"submodulo\">Procuraduria\r\n                                    </nb-toggle>\r\n                                    <nb-toggle status=\"primary\" class=\"p-2\" [checked]=\"secondForm['submodulo']\"\r\n                                    formControlName=\"submodulo\">Usuarios\r\n                                    </nb-toggle>\r\n                                </div>                    \r\n                            </div>-->\r\n                            \r\n\r\n                            <div class=\"nav justify-content-center pt-2\">\r\n                                <button nbButton nbStepperPrevious class=\"mr-2\">Anterior</button>\r\n                                <button nbButton status=\"primary\" [disabled]=\"!userForm.valid\" (click)=\"save()\" hero>Guardar</button>\r\n                            </div>\r\n                          </form>\r\n                        </nb-step>\r\n                      </nb-stepper>\r\n                </div>\r\n            </div>\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n         \r\n        </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n"]}