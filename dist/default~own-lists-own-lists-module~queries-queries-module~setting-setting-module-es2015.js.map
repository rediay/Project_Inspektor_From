{"version":3,"sources":["./src/app/@components/editors/file-uploader/upload-queue-item.component.ts","./src/app/@components/editors/file-uploader/upload-queue-item.component.html","./src/app/@components/editors/file-uploader/file-uploader.service.ts","./src/app/@components/editors/file-uploader/file-uploader.module.ts","./src/app/@components/editors/file-uploader/file-uploader.component.ts","./src/app/@components/editors/file-uploader/file-uploader.component.html","./src/app/@components/editors/file-uploader/file-uploader.model.ts"],"names":[],"mappings":"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","file":"default~own-lists-own-lists-module~queries-queries-module~setting-setting-module-es2015.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nb-upload-queue-item',\r\n  templateUrl: 'upload-queue-item.component.html',\r\n  styleUrls: ['./upload-queue-item.component.scss'],\r\n})\r\nexport class NbUploadQueueItemComponent {\r\n  @Input()\r\n  item: any;\r\n\r\n  get status(): string {\r\n    if (this.item.progress <= 25) {\r\n      return 'danger';\r\n    }\r\n    if (this.item.progress <= 50) {\r\n      return 'warning';\r\n    }\r\n    if (this.item.progress <= 75) {\r\n      return 'info';\r\n    }\r\n    return 'success';\r\n  }\r\n}\r\n","<span class=\"file-item-caption\">\r\n  <span>{{ item.name }}</span>\r\n  <span class=\"file-progress\">{{ item.progress + '%' }}</span>\r\n</span>\r\n\r\n<nb-progress-bar [value]=\"item.progress\" [status]=\"status\"></nb-progress-bar>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of as observableOf } from 'rxjs';\r\n\r\nimport { NbFileUploaderOptions, NbFileItem } from './file-uploader.model';\r\n\r\n@Injectable()\r\nexport class NbFileUploaderService {\r\n  private uploadQueue: NbFileItem[] = [];\r\n\r\n  get uploadQueue$(): Observable<NbFileItem[]> {\r\n    return observableOf(this.uploadQueue);\r\n  }\r\n\r\n  uploadAll(files: NbFileItem[], options: NbFileUploaderOptions) {\r\n    if (!files) {\r\n      return;\r\n    }\r\n    this.addToQueue(files);\r\n    files.forEach((file: NbFileItem) => this.upload(file, options));\r\n  }\r\n\r\n  private addToQueue(files: NbFileItem[]) {\r\n    this.uploadQueue.push(...files);\r\n  }\r\n\r\n  private upload(file: NbFileItem, options: NbFileUploaderOptions) {\r\n    const sendable = new FormData();\r\n    sendable.append('file', file.rawFile, file.name);\r\n\r\n    file.onBeforeUpload();\r\n\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    xhr.open('post', options.url, true);\r\n\r\n    xhr.upload.onprogress = event => {\r\n      const percentDone = Math.round(event.lengthComputable ? (100 * event.loaded) / event.total : 0);\r\n      file.onProgress(percentDone);\r\n    };\r\n\r\n    xhr.onerror = event => {\r\n      file.onError();\r\n    };\r\n\r\n    xhr.onload = event => {\r\n      file.onSuccess();\r\n    };\r\n\r\n    if (options.params) {\r\n      Object.entries(options.params).forEach(([key, value]) => {\r\n        sendable.append(key, value);\r\n      });\r\n    }\r\n\r\n    if (options.headers) {\r\n      Object.entries(options.headers).forEach(([key, value]) => {\r\n        xhr.setRequestHeader(key, value);\r\n      });\r\n    }\r\n\r\n    xhr.send(sendable);\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { NbEvaIconsModule } from \"@nebular/eva-icons\";\r\nimport { NbButtonComponent, NbButtonModule, NbIconModule, NbProgressBarModule } from \"@nebular/theme\";\r\nimport { NbFileUploaderComponent } from \"./file-uploader.component\";\r\nimport { NbUploadQueueItemComponent } from \"./upload-queue-item.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [NbFileUploaderComponent, NbUploadQueueItemComponent, NbUploadQueueItemComponent],\r\n  imports: [CommonModule, HttpClientModule, NbProgressBarModule,NbButtonModule,NbIconModule,NbEvaIconsModule],\r\n  exports: [NbFileUploaderComponent, NbUploadQueueItemComponent, NbUploadQueueItemComponent],\r\n  providers: [],\r\n})\r\nexport class NbFileUploaderModule {}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\r\n\r\nimport { NbFileUploaderService } from './file-uploader.service';\r\nimport { NbFileUploaderOptions, NbFileItem } from './file-uploader.model';\r\n\r\n@Component({\r\n  selector: 'nb-file-uploader',\r\n  templateUrl: './file-uploader.component.html',\r\n  styleUrls: ['./file-uploader.component.scss'],\r\n  providers: [NbFileUploaderService],\r\n})\r\nexport class NbFileUploaderComponent {\r\n  @ViewChild('inputEl')\r\n  inputEl: ElementRef;\r\n\r\n  @Input()\r\n  options: NbFileUploaderOptions = { multiple: false, directory: false, showUploadQueue: true };\r\n\r\n  @Output()\r\n  selectFile = new EventEmitter<File[]>();\r\n\r\n  get accept(): string {\r\n    return this.options.allowedFileTypes.join(',');\r\n  }\r\n\r\n  constructor(public uploader: NbFileUploaderService) {}\r\n\r\n  browse() {\r\n    this.inputEl.nativeElement.click();\r\n  }\r\n\r\n  onChange() {\r\n    const files = this.inputEl.nativeElement.files;\r\n    const preparedFiles = this.getPreparedFiles(files);\r\n\r\n    if (files.length > 0) {\r\n      this.selectFile.emit(files[0])\r\n    }\r\n    //this.uploader.uploadAll(preparedFiles, this.options);\r\n  }\r\n\r\n  private getPreparedFiles(files): NbFileItem[] {\r\n    return Array.from(files).map((file: File) => new NbFileItem(file));\r\n  }\r\n}\r\n","<div class=\"file-uploader\">\r\n    <ng-container>\r\n        <input #inputEl type=\"file\" style=\"display: none;\" [accept]=\"accept\" [multiple]=\"options.multiple\" (change)=\"onChange()\">\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"options.directory\">\r\n        <input #inputEl type=\"file\" style=\"display: none;\" [accept]=\"accept\" [multiple]=\"options.multiple\" webkitdirectory (change)=\"onChange()\">\r\n    </ng-container>\r\n\r\n\r\n    <button nbButton outline status=\"success\" (click)=\"browse()\">        \r\n        <nb-icon icon=\"upload-outline\"></nb-icon>\r\n        Seleccionar archivo\r\n    </button>\r\n</div>\r\n\r\n<nb-upload-queue *ngIf=\"(uploader.uploadQueue$ | async).length && options.showUploadQueue\" [items]=\"uploader.uploadQueue$ | async\"></nb-upload-queue>","export interface NbFileUploaderOptions {\r\n  multiple?: boolean;\r\n  directory?: boolean;\r\n  showUploadQueue?: boolean;\r\n\r\n  url?: string;\r\n  params?: { [key: string]: string };\r\n  headers?: { [key: string]: string };\r\n\r\n  allowedFileTypes?: string[];\r\n}\r\n\r\nexport class NbFileItem {\r\n  rawFile: File;\r\n  name: string;\r\n  lastModified: number;\r\n  progress: number = 0;\r\n  size: number;\r\n  type: string;\r\n\r\n  isUploading: boolean = false;\r\n  isUploaded: boolean = false;\r\n  isSuccess: boolean = false;\r\n  isCancel: boolean = false;\r\n  isError: boolean = false;\r\n\r\n  constructor(file: File) {\r\n    this.rawFile = file;\r\n    this.name = file.name;\r\n    this.lastModified = file.lastModified;\r\n    this.size = file.size;\r\n    this.type = file.type;\r\n  }\r\n\r\n  onProgress(progress: number) {\r\n    this.progress = progress;\r\n  }\r\n\r\n  onBeforeUpload() {\r\n    this.isUploading = true;\r\n    this.isUploading = false;\r\n    this.isCancel = false;\r\n    this.isError = false;\r\n    this.isSuccess = false;\r\n    this.progress = 0;\r\n  }\r\n\r\n  onSuccess() {\r\n    this.isUploading = false;\r\n    this.isUploaded = true;\r\n    this.isCancel = false;\r\n    this.isError = false;\r\n    this.isSuccess = true;\r\n    this.progress = 100;\r\n  }\r\n\r\n  onCancel() {\r\n    this.isUploading = false;\r\n    this.isUploaded = false;\r\n    this.isCancel = true;\r\n    this.isError = false;\r\n    this.isSuccess = false;\r\n    this.progress = 0;\r\n  }\r\n\r\n  onError() {\r\n    this.isUploading = false;\r\n    this.isUploaded = false;\r\n    this.isCancel = false;\r\n    this.isError = true;\r\n    this.isSuccess = false;\r\n    this.progress = 0;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}