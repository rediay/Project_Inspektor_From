{"version":3,"sources":["webpack:///src/app/pages/tables/smart-table/smart-table.component.ts","webpack:///src/app/pages/tables/smart-table/smart-table.component.html","webpack:///src/app/pages/tables/tables-routing.module.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.html","webpack:///src/app/pages/tables/tables.component.ts"],"names":["SmartTableComponent","service","settings","add","addButtonContent","createButtonContent","cancelButtonContent","edit","editButtonContent","saveButtonContent","deleteButtonContent","confirmDelete","columns","id","title","type","firstName","lastName","login","email","age","source","data","getData","load","event","window","confirm","resolve","reject","onDeleteConfirm","routes","path","component","children","TablesRoutingModule","forChild","routedComponents","TreeGridComponent","dataSourceBuilder","measureConverterPipe","customColumn","defaultColumns","allColumns","sortDirection","NONE","name","size","items","kind","dataSource","create","sortRequest","sortColumn","column","direction","columnValue","columnName","transform","index","minWithForMultipleColumns","nextColumnStep","updateSort","FsIconComponent","TablesComponent"],"mappings":"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","file":"default~extra-extra-module~notifications-notifications-module~own-lists-own-lists-module~reports-rep~3013ba95-es5.js","sourcesContent":["/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\r\n\r\n@Component({\r\n  selector: 'ngx-smart-table',\r\n  templateUrl: './smart-table.component.html',\r\n  styleUrls: ['./smart-table.component.scss'],\r\n})\r\nexport class SmartTableComponent {\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n      },\r\n      firstName: {\r\n        title: 'First Name',\r\n        type: 'string',\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n        type: 'string',\r\n      },\r\n      login: {\r\n        title: 'Login',\r\n        type: 'string',\r\n      },\r\n      email: {\r\n        title: 'E-mail',\r\n        type: 'string',\r\n      },\r\n      age: {\r\n        title: 'Age',\r\n        type: 'number',\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData) {\r\n    const data = this.service.getData();\r\n    this.source.load(data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        Smart Table\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n        <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n        </ng2-smart-table>\r\n    </nb-card-body>\r\n\r\n\r\n</nb-card>","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\nimport { SmartTableComponent } from './smart-table/smart-table.component';\r\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [\r\n    {\r\n      path: 'smart-table',\r\n      component: SmartTableComponent,\r\n    },\r\n    {\r\n      path: 'tree-grid',\r\n      component: TreeGridComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  SmartTableComponent,\r\n  TreeGridComponent,\r\n];\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\r\nimport {MeasureConverterPipe} from '../../../@theme/pipes';\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n  children?: TreeNode<T>[];\r\n  expanded?: boolean;\r\n}\r\n\r\ninterface FSEntry {\r\n  name: string;\r\n  size: number;\r\n  kind: string;\r\n  items?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-tree-grid',\r\n  templateUrl: './tree-grid.component.html',\r\n  styleUrls: ['./tree-grid.component.scss'],\r\n})\r\nexport class TreeGridComponent {\r\n  customColumn = 'name';\r\n  defaultColumns = [ 'size', 'kind', 'items' ];\r\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\r\n\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n\r\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>,\r\n              public measureConverterPipe: MeasureConverterPipe) {\r\n    this.dataSource = this.dataSourceBuilder.create(this.data);\r\n  }\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n  private data: TreeNode<FSEntry>[] = [\r\n    {\r\n      data: { name: 'Projects', size: 1800000, items: 4, kind: 'dir' },\r\n      children: [\r\n        { data: { name: 'project-1.doc', kind: 'doc', size: 240000 } },\r\n        { data: { name: 'project-2.doc', kind: 'doc', size: 290000 } },\r\n        { data: { name: 'project-3', kind: 'txt', size: 466000 } },\r\n        { data: { name: 'project-4.docx', kind: 'docx', size: 900000 } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Reports', kind: 'dir', size: 400000, items: 2 },\r\n      children: [\r\n        { data: { name: 'Report 1', kind: 'doc', size: 100000 } },\r\n        { data: { name: 'Report 2', kind: 'doc', size: 300000 } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Other', kind: 'dir', size: 109000000, items: 2 },\r\n      children: [\r\n        { data: { name: 'backup.bkp', kind: 'bkp', size: 107000000 } },\r\n        { data: { name: 'secret-note.txt', kind: 'txt', size: 2000000 } },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  getCellValue(columnValue: string | number, columnName: string): string | number {\r\n    if (columnName === 'size') {\r\n      return this.measureConverterPipe.transform(columnValue);\r\n    }\r\n    return columnValue || '-';\r\n  }\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-fs-icon',\r\n  template: `\r\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\r\n    </nb-tree-grid-row-toggle>\r\n    <ng-template #fileIcon>\r\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class FsIconComponent {\r\n  @Input() kind: string;\r\n  @Input() expanded: boolean;\r\n\r\n  isDir(): boolean {\r\n    return this.kind === 'dir';\r\n  }\r\n}\r\n","<!--\r\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\r\n  ~ Licensed under the Single Application / Multi Application License.\r\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n  -->\r\n\r\n<nb-card>\r\n  <nb-card-body>\r\n\r\n    <label class=\"search-label\" for=\"search\">Search:</label>\r\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\r\n\r\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n\r\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\r\n          {{customColumn}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\r\n          {{row.data[customColumn]}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\r\n                    [nbTreeGridColumnDef]=\"column\"\r\n                    [showOn]=\"getShowOn(index)\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\r\n          {{column}}\r\n        </th>\r\n\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{getCellValue(row.data[column], column)}}</td>\r\n      </ng-container>\r\n\r\n    </table>\r\n\r\n  </nb-card-body>\r\n</nb-card>\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n}\r\n"]}