{"version":3,"sources":["webpack:///src/app/pages/users/users.module.ts","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users-routing.module.ts","webpack:///src/app/pages/users/user/user.component.ts","webpack:///src/app/pages/users/user/user.component.html"],"names":["NB_MODULES","UsersModule","UsersComponent","routes","path","component","children","canActivate","UsersRoutingModule","forChild","UserFormMode","UserComponent","usersService","router","route","tokenService","userStore","toasterService","fb","unsubscribe$","userForm","get","viewMode","mode","initUserForm","loadUserData","group","id","control","role","name","minLength","maxLength","lastName","login","age","companyId","email","required","pattern","VIEW","snapshot","paramMap","isProfile","queryParamMap","setViewMode","EDIT_SELF","loadUser","currentUserId","getUser","toString","EDIT","ADD","getCurrentUser","pipe","subscribe","user","setValue","value","convertToUser","observable","updateCurrent","result","set","Date","handleSuccessResponse","err","handleWrongResponse","update","create","success","back","danger","navigate","next","complete","save"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { AuthModule } from '../../@auth/auth.module';\r\n\r\n// components\r\nimport { UsersComponent } from './users.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { ComponentsModule } from '../../@components/components.module';\r\n// components\r\n\r\nimport {\r\n  NbActionsModule,\r\n  NbButtonModule,\r\n  NbCardModule,\r\n  NbInputModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbRadioModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbIconModule,\r\n  NbSpinnerModule,\r\n  NbDatepickerModule,\r\n} from '@nebular/theme';\r\n\r\nconst  NB_MODULES = [\r\n  NbActionsModule,\r\n  NbButtonModule,\r\n  NbCardModule,\r\n  NbInputModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbRadioModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbIconModule,\r\n  NbSpinnerModule,\r\n  NbDatepickerModule,\r\n  NbInputModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    ThemeModule,\r\n    AuthModule,\r\n    Ng2SmartTableModule,\r\n    UsersRoutingModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    ...NB_MODULES,\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [],\r\n})\r\nexport class UsersModule { }\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-users',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class UsersComponent {\r\n\r\n}\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UsersComponent } from './users.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { AdminGuard } from '../../@auth/admin.guard';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: UsersComponent,\r\n  children: [\r\n    {\r\n      path: 'edit/:id',\r\n      canActivate: [AdminGuard],\r\n      component: UserComponent,\r\n    },\r\n    {\r\n      path: 'current',\r\n      component: UserComponent,\r\n    },\r\n    {\r\n      path: 'add',\r\n      canActivate: [AdminGuard],\r\n      component: UserComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UsersRoutingModule {\r\n\r\n}\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\nimport {Observable,Subject} from 'rxjs';\r\n\r\nimport {NbToastrService} from '@nebular/theme';\r\n\r\nimport {User, UserData} from '../../../@core/interfaces/common/users';\r\nimport {EMAIL_PATTERN} from '../../../@auth/components';\r\nimport {NbAuthOAuth2JWTToken, NbTokenService} from '@nebular/auth';\r\nimport {UserStore} from '../../../@core/stores/user.store';\r\nimport {takeUntil} from \"rxjs/operators\";\r\n\r\nexport enum UserFormMode {\r\n  VIEW = 'View',\r\n  EDIT = 'Edit',\r\n  ADD = 'Add',\r\n  EDIT_SELF = 'EditSelf',\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\nexport class UserComponent implements OnInit, OnDestroy {\r\n  userForm: FormGroup;\r\n  // companyId: any;\r\n\r\n  protected readonly unsubscribe$ = new Subject<void>();\r\n\r\n  get firstName() { return this.userForm.get('name'); }\r\n\r\n  get lastName() { return this.userForm.get('lastName'); }\r\n\r\n  get login() { return this.userForm.get('login'); }\r\n\r\n  get email() { return this.userForm.get('email'); }\r\n\r\n  mode: UserFormMode;\r\n  setViewMode(viewMode: UserFormMode) {\r\n    this.mode = viewMode;\r\n  }\r\n\r\n  constructor(private usersService: UserData,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private tokenService: NbTokenService,\r\n              private userStore: UserStore,\r\n              private toasterService: NbToastrService,\r\n              private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initUserForm();\r\n    this.loadUserData();\r\n  }\r\n\r\n  initUserForm() {\r\n    this.userForm = this.fb.group({\r\n      id: this.fb.control(''),\r\n      role: this.fb.control(''),\r\n      name: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n      lastName: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\r\n      login: this.fb.control(''),\r\n      age: this.fb.control(''),\r\n      companyId: this.fb.control(''),\r\n      email: this.fb.control('', [\r\n        Validators.required,\r\n        Validators.pattern(EMAIL_PATTERN),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  get canEdit(): boolean {\r\n    return this.mode !== UserFormMode.VIEW;\r\n  }\r\n\r\n\r\n  loadUserData() {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    const isProfile = this.route.snapshot.queryParamMap.get('profile');\r\n    if (isProfile) {\r\n      this.setViewMode(UserFormMode.EDIT_SELF);\r\n      this.loadUser();\r\n    } else {\r\n      if (id) {\r\n        const currentUserId = this.userStore.getUser().id;\r\n        this.setViewMode(currentUserId.toString() === id ? UserFormMode.EDIT_SELF : UserFormMode.EDIT);\r\n        this.loadUser(id);\r\n      } else {\r\n        this.setViewMode(UserFormMode.ADD);\r\n      }\r\n    }\r\n  }\r\n\r\n  loadUser(id?) {\r\n    const loadUser = this.mode === UserFormMode.EDIT_SELF\r\n      ? this.usersService.getCurrentUser() : this.usersService.get(id);\r\n    loadUser\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe((user) => {\r\n        this.userForm.setValue({\r\n          id: user.id ? user.id : '',\r\n          role: user.role ? user.role : '',\r\n          name: user.name ? user.name : '',\r\n          lastName: user.lastName ? user.lastName : '',\r\n          login: user.login ? user.login : '',\r\n          age: '',\r\n          companyId: user.companyId ? user.companyId : '',\r\n          email: user.email,\r\n        });\r\n        // this.companyId = user.companyId;\r\n        // this is a place for value changes handling\r\n        // this.userForm.valueChanges.pipe(takeUntil(this.unsubscribe$)).subscribe((value) => {   });\r\n      });\r\n  }\r\n\r\n\r\n  convertToUser(value: any): User {\r\n    const user: User = value;\r\n    return user;\r\n  }\r\n\r\n  save() {\r\n    const user: User = this.convertToUser(this.userForm.value);   \r\n    let observable = new Observable<User>();\r\n    if (this.mode === UserFormMode.EDIT_SELF) {\r\n      this.usersService.updateCurrent(user).subscribe((result: any) => {\r\n          this.tokenService.set(new NbAuthOAuth2JWTToken(result, 'email', new Date()));\r\n          this.handleSuccessResponse();\r\n        },\r\n        err => {\r\n          this.handleWrongResponse();\r\n        });\r\n    } else {\r\n      observable = user.id\r\n        ? this.usersService.update(user)\r\n        : this.usersService.create(user);\r\n    }\r\n\r\n    observable\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe(() => {\r\n          this.handleSuccessResponse();\r\n        },\r\n        err => {\r\n          this.handleWrongResponse();\r\n        });\r\n  }\r\n\r\n  handleSuccessResponse() {\r\n    this.toasterService.success('', `Item ${this.mode === UserFormMode.ADD ? 'created' : 'updated'}!`);\r\n    this.back();\r\n  }\r\n\r\n  handleWrongResponse() {\r\n    this.toasterService.danger('', `This email has already taken!`);\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['/pages']);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","<!--\r\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\r\n  ~ Licensed under the Single Application / Multi Application License.\r\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n  -->\r\n\r\n<nb-card>\r\n  <nb-card-header>{{ mode }} user</nb-card-header>\r\n  <nb-card-body>\r\n    <div [formGroup]=\"userForm\" class=\"container\">\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input\r\n          nbInput\r\n          id=\"firstName\"\r\n          formControlName=\"name\"\r\n          [status]=\"\r\n            firstName?.hasError('minlength') || firstName?.hasError('maxlength')\r\n              ? 'danger'\r\n              : 'primary'\r\n          \"\r\n          class=\"form-control\"\r\n          placeholder=\"Last Name\"\r\n        />\r\n        <ngx-validation-message\r\n          label=\"First Name\"\r\n          [showMinLength]=\"firstName?.hasError('minlength')\"\r\n          [showMaxLength]=\"firstName?.hasError('maxlength')\"\r\n          minLength=\"3\"\r\n          maxLength=\"20\"\r\n        ></ngx-validation-message>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input\r\n          nbInput\r\n          id=\"lastName\"\r\n          formControlName=\"lastName\"\r\n          [status]=\"\r\n            lastName?.hasError('minlength') || lastName?.hasError('maxlength')\r\n              ? 'danger'\r\n              : 'primary'\r\n          \"\r\n          class=\"form-control\"\r\n          placeholder=\"Last Name\"\r\n        />\r\n        <ngx-validation-message\r\n          label=\"Last Name\"\r\n          [showMinLength]=\"lastName?.hasError('minlength')\"\r\n          [showMaxLength]=\"lastName?.hasError('maxlength')\"\r\n          minLength=\"3\"\r\n          maxLength=\"20\"\r\n        ></ngx-validation-message>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"inputLogin\">Login</label>\r\n        <input\r\n          nbInput\r\n          id=\"inputLogin\"\r\n          formControlName=\"login\"\r\n          disabled\r\n          [status]=\"\r\n            (login?.errors?.required ||\r\n              login?.hasError('minlength') ||\r\n              login?.hasError('maxlength')) &&\r\n            login.touched\r\n              ? 'danger'\r\n              : 'primary'\r\n          \"\r\n          class=\"form-control\"\r\n          placeholder=\"Login\"\r\n        />\r\n        <ngx-validation-message\r\n          label=\"Login\"\r\n          [showMinLength]=\"login?.hasError('minlength')\"\r\n          [showMaxLength]=\"login?.hasError('maxlength')\"\r\n          [showRequired]=\"login?.errors?.required && login.touched\"\r\n          minLength=\"6\"\r\n          maxLength=\"20\"\r\n        ></ngx-validation-message>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"inputEmail\">Email</label>\r\n        <input\r\n          nbInput\r\n          id=\"inputEmail\"\r\n          formControlName=\"email\"\r\n          [status]=\"\r\n            (email?.errors?.required || email?.hasError('pattern')) &&\r\n            email.touched\r\n              ? 'danger'\r\n              : 'primary'\r\n          \"\r\n          class=\"form-control\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <ngx-validation-message\r\n          label=\"Email\"\r\n          [showPattern]=\"email?.hasError('pattern') && email.touched\"\r\n          [showRequired]=\"email?.errors?.required && email.touched\"\r\n          min=\"1\"\r\n          max=\"120\"\r\n        ></ngx-validation-message>\r\n      </div>\r\n      \r\n    </div>\r\n  </nb-card-body>\r\n  <nb-card-footer>\r\n    <button\r\n      nbButton\r\n      status=\"primary\"\r\n      [disabled]=\"!userForm.valid\"\r\n      (click)=\"save()\"\r\n      hero\r\n    >\r\n      Submit\r\n    </button>\r\n    <button nbButton status=\"info\" (click)=\"back()\" hero>Back</button>\r\n  </nb-card-footer>\r\n</nb-card>\r\n"]}