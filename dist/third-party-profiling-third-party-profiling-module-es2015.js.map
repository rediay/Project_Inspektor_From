{"version":3,"sources":["./src/app/pages/third-party-profiling/parameterize-variables/category-variables/components/category-variables-form/category-variables-form.component.ts","./src/app/pages/third-party-profiling/parameterize-variables/category-variables/components/category-variables-form/category-variables-form.component.html","./src/app/pages/third-party-profiling/third-party-profiling-routing.module.ts","./src/app/pages/third-party-profiling/backend/common/api/parameterize-variable.api.ts","./src/app/pages/third-party-profiling/third-party-profiling.module.ts","./src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/components/risk-profile-variables-form/risk-profile-variables-form.component.ts","./src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/components/risk-profile-variables-form/risk-profile-variables-form.component.html","./src/app/pages/third-party-profiling/third-party-profiling.component.ts","./src/app/pages/third-party-profiling/third-party-profiling.component.html","./src/app/pages/third-party-profiling/parameterize-variables/category-variables/category-variables.component.ts","./src/app/pages/third-party-profiling/parameterize-variables/category-variables/category-variables.component.html","./src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/risk-profile-variables.component.ts","./src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/risk-profile-variables.component.html","./src/app/pages/third-party-profiling/backend/common/services/parameterize-variable.service.ts"],"names":[],"mappings":"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","file":"third-party-profiling-third-party-profiling-module-es2015.js","sourcesContent":["import {Component, EventEmitter, Input, OnInit, Optional, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {NbDialogRef, NbToastrService, NbWindowRef} from \"@nebular/theme\";\r\nimport {ParameterizeVariableService} from \"../../../../backend/common/services/parameterize-variable.service\";\r\n\r\n@Component({\r\n    selector: 'ngx-category-variables-form',\r\n    templateUrl: './category-variables-form.component.html',\r\n    styleUrls: ['./category-variables-form.component.scss']\r\n})\r\nexport class CategoryVariablesFormComponent implements OnInit {\r\n\r\n    categoryVariableForm: FormGroup;\r\n    nameError = null;\r\n    weightError = null;\r\n    private riskProfileVariableId: number;\r\n    private personTypeId: number;\r\n    @Input() categoryVariables: any;\r\n\r\n    get name() {\r\n        return this.categoryVariableForm.get('name');\r\n    }\r\n\r\n    get weight() {\r\n        return this.categoryVariableForm.get('weight');\r\n    }\r\n\r\n    constructor(protected toastrService: NbToastrService,\r\n                @Optional() protected dialogRef: NbDialogRef<CategoryVariablesFormComponent>,\r\n                @Optional() protected windowRef: NbWindowRef,\r\n                private parameterizeVariableService: ParameterizeVariableService,\r\n                private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initCategoryVariableForm();\r\n        this.loadVariable();\r\n    }\r\n\r\n    initCategoryVariableForm() {\r\n        this.categoryVariableForm = this.fb.group({\r\n            id: this.fb.control(''),\r\n            name: this.fb.control('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\r\n            weight: this.fb.control('', [Validators.required, Validators.minLength(1), Validators.maxLength(20)]),\r\n        });\r\n    }\r\n\r\n    loadVariable() {\r\n        const id = this.categoryVariables.id ? this.categoryVariables.id : '';\r\n        const name = this.categoryVariables.name ? this.categoryVariables.name : '';\r\n        const weight = this.categoryVariables.weight ? this.categoryVariables.weight : '';\r\n\r\n        this.riskProfileVariableId = this.categoryVariables.riskProfileVariableId;\r\n        this.personTypeId = this.categoryVariables.personTypeId;\r\n\r\n        this.categoryVariableForm.setValue({\r\n            id: id,\r\n            name: name,\r\n            weight: weight,\r\n        })\r\n    }\r\n\r\n    save() {\r\n        const data = this.categoryVariableForm.value;\r\n        const id = data.id;\r\n\r\n        data.riskProfileVariableId = this.riskProfileVariableId\r\n        data.personTypeId = this.personTypeId\r\n\r\n        this.parameterizeVariableService.updateCategoryVariable(id, data).subscribe(response => {\r\n\r\n            this.toastrService.success('', '¡Registro exitoso!', {\r\n                icon: '',\r\n            });\r\n\r\n            this.dialogRef.close(response)\r\n\r\n        }, error => {\r\n            this.toastrService.danger('', 'Error al guardar el registro', {\r\n                icon: '',\r\n            });\r\n        })\r\n    }\r\n}\r\n","<div class=\"col-lg-12\">\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Editar categorías de variable\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <form [formGroup]=\"categoryVariableForm\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"name\">Nombre categoría</label>\r\n                    <input fullWidth nbInput id=\"name\" formControlName=\"name\"\r\n                           [status]=\"(name?.hasError('minlength') || name?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           placeholder=\"Ingrese el número Documento\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"name?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"name?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                    <p class=\"error-message caption status-danger\"\r\n                       *ngIf=\"nameError\">\r\n                        {{nameError}}\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"weight\">Peso</label>\r\n                    <input fullWidth nbInput id=\"weight\" formControlName=\"weight\"\r\n                           [status]=\"(weight?.hasError('minlength') || weight?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           class=\"form-control\" placeholder=\"Ingrese el nombre\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"weight?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"weight?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                </div>\r\n            </form>\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <button nbButton status=\"primary\" [disabled]=\"!categoryVariableForm.valid\" (click)=\"save()\" hero>Guardar\r\n            </button>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ThirdPartyProfilingComponent} from './third-party-profiling.component';\r\nimport {RiskProfileVariablesComponent} from \"./parameterize-variables/risk-profile-variables/risk-profile-variables.component\";\r\nimport {CategoryVariablesComponent} from \"./parameterize-variables/category-variables/category-variables.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ThirdPartyProfilingComponent,\r\n        children: [\r\n            {\r\n                path: 'parameterize-variables/risk-profile-variables',\r\n                component: RiskProfileVariablesComponent,\r\n            },\r\n            {\r\n                path: 'parameterize-variables/category-variables/:id',\r\n                component: CategoryVariablesComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\n\r\nexport class ThirdPartyProfilingRoutingModule {\r\n}\r\n\r\nexport const routedComponents = [\r\n    ThirdPartyProfilingComponent,\r\n];\r\n","import {Injectable} from '@angular/core';\r\nimport {CustomHttpService} from '../../../../../utils/custom-http.service';\r\nimport {CustomServerDataSource} from \"../../../../../utils/custom-server.data-source\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ParameterizeVariableApi {\r\n\r\n    private readonly apiRiskProfileVariableController: string = 'third-party-profiling/parameterize-variables/risk-profile-variables';\r\n    private readonly apiCategoryVariablesController: string = 'third-party-profiling/parameterize-variables/category-variables';\r\n    private readonly apiCategoryVariablesDataSourceController: string = 'third-party-profiling/parameterize-variables/risk-profile-variables';\r\n\r\n    constructor(private api: CustomHttpService) {\r\n    }\r\n\r\n    getRiskProfileVariableServerDataSource(): CustomServerDataSource {\r\n        return this.api.getServerDataSource(`${this.apiRiskProfileVariableController}`);\r\n    }\r\n\r\n    getCategoryVariablesServerDataSource(riskProfileVariableId: number, personTypeId: number): CustomServerDataSource {\r\n        const endpoint = `${this.apiCategoryVariablesDataSourceController}/${riskProfileVariableId}/category-variables/person-type/${personTypeId}`\r\n        return this.api.getServerDataSource(`${endpoint}`);\r\n    }\r\n\r\n    updateRiskProfileVariable(id: number, data: any): Observable<any> {\r\n        return this.api.put(`${this.apiRiskProfileVariableController}/${id}`, data);\r\n    }\r\n\r\n    updateCategoryVariable(id: number, data: any): Observable<any> {\r\n        return this.api.put(`${this.apiCategoryVariablesController}/${id}`, data);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ThirdPartyProfilingRoutingModule} from './third-party-profiling-routing.module';\r\nimport {ThirdPartyProfilingComponent} from './third-party-profiling.component';\r\nimport {\r\n    NbButtonModule,\r\n    NbCardModule,\r\n    NbDialogService,\r\n    NbFormFieldModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    NbSelectModule,\r\n    NbTreeGridModule,\r\n    NbWindowService,\r\n} from \"@nebular/theme\";\r\nimport {Ng2SmartTableModule} from \"ng2-smart-table\";\r\nimport {ComponentsModule} from \"../../@components/components.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {RiskProfileVariablesComponent} from './parameterize-variables/risk-profile-variables/risk-profile-variables.component';\r\nimport {RiskProfileVariablesFormComponent} from './parameterize-variables/risk-profile-variables/components/risk-profile-variables-form/risk-profile-variables-form.component';\r\nimport {CustomHttpService} from \"../../utils/custom-http.service\";\r\nimport {ParameterizeVariableApi} from \"./backend/common/api/parameterize-variable.api\";\r\nimport {ParameterizeVariableService} from \"./backend/common/services/parameterize-variable.service\";\r\nimport { CategoryVariablesComponent } from './parameterize-variables/category-variables/category-variables.component';\r\nimport { CategoryVariablesFormComponent } from './parameterize-variables/category-variables/components/category-variables-form/category-variables-form.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ThirdPartyProfilingComponent,\r\n        RiskProfileVariablesComponent,\r\n        RiskProfileVariablesFormComponent,\r\n        CategoryVariablesComponent,\r\n        CategoryVariablesFormComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ThirdPartyProfilingRoutingModule,\r\n        NbCardModule,\r\n        NbTreeGridModule,\r\n        Ng2SmartTableModule,\r\n        NbInputModule,\r\n        ComponentsModule,\r\n        ReactiveFormsModule,\r\n        NbSelectModule,\r\n        NbIconModule,\r\n        NbButtonModule,\r\n        NbFormFieldModule,\r\n        FormsModule,\r\n    ],\r\n    providers: [\r\n        CustomHttpService,\r\n        ParameterizeVariableApi,\r\n        ParameterizeVariableService,\r\n        NbDialogService,\r\n        NbWindowService,\r\n    ]\r\n})\r\nexport class ThirdPartyProfilingModule {\r\n}\r\n","import {Component, Input, OnInit, Optional} from '@angular/core';\r\nimport {NbDialogRef, NbToastrService, NbWindowRef} from \"@nebular/theme\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ParameterizeVariableService} from \"../../../../backend/common/services/parameterize-variable.service\";\r\n\r\n@Component({\r\n    selector: 'ngx-risk-profile-variables-form',\r\n    templateUrl: './risk-profile-variables-form.component.html',\r\n    styleUrls: ['./risk-profile-variables-form.component.scss']\r\n})\r\nexport class RiskProfileVariablesFormComponent implements OnInit {\r\n\r\n    constructor(protected toastrService: NbToastrService,\r\n                @Optional() protected dialogRef: NbDialogRef<RiskProfileVariablesFormComponent>,\r\n                @Optional() protected windowRef: NbWindowRef,\r\n                private parameterizeVariableService: ParameterizeVariableService,\r\n                private fb: FormBuilder) {\r\n    }\r\n\r\n    @Input() riskProfileVariables: any;\r\n    variableForm: FormGroup;\r\n    nameError = null;\r\n    weightError = null;\r\n\r\n    get name() {\r\n        return this.variableForm.get('name');\r\n    }\r\n\r\n    get weight() {\r\n        return this.variableForm.get('weight');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initVariableForm();\r\n        this.loadVariable();\r\n    }\r\n\r\n    initVariableForm() {\r\n        this.variableForm = this.fb.group({\r\n            id: this.fb.control(''),\r\n            name: this.fb.control('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\r\n            weight: this.fb.control('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\r\n        });\r\n    }\r\n\r\n    loadVariable() {\r\n        const id = this.riskProfileVariables.id ? this.riskProfileVariables.id : '';\r\n        const name = this.riskProfileVariables.name ? this.riskProfileVariables.name : '';\r\n        const weight = this.riskProfileVariables.weight ? this.riskProfileVariables.weight : '';\r\n\r\n        this.variableForm.setValue({\r\n            id: id,\r\n            name: name,\r\n            weight: weight\r\n        })\r\n    }\r\n\r\n    save() {\r\n        const data = this.variableForm.value;\r\n        const id = data.id;\r\n\r\n        this.parameterizeVariableService.updateRiskProfileVariable(id, data).subscribe((response) => {\r\n\r\n            this.toastrService.success('', '¡Registro exitoso!', {\r\n                icon: '',\r\n            });\r\n\r\n            this.dialogRef.close(response)\r\n\r\n\r\n            /*this.windowRef.onClose.subscribe(response => {\r\n                console.log('response', response);\r\n            })*/\r\n            // console.log('componentRef', this.windowRef.componentRef);\r\n            // this.dialogRef.close(response)\r\n\r\n        }, error => {\r\n            this.toastrService.danger('', 'Error al guardar el registro', {\r\n                icon: '',\r\n            });\r\n        })\r\n    }\r\n}\r\n","<div class=\"col-lg-12\">\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Editar variable\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <form [formGroup]=\"variableForm\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"name\">Nombre variable</label>\r\n                    <input fullWidth nbInput id=\"name\" formControlName=\"name\"\r\n                           [status]=\"(name?.hasError('minlength') || name?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           placeholder=\"Ingrese el número Documento\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"name?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"name?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                    <p class=\"error-message caption status-danger\"\r\n                       *ngIf=\"nameError\">\r\n                        {{nameError}}\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"weight\">Peso</label>\r\n                    <input fullWidth nbInput id=\"weight\" formControlName=\"weight\"\r\n                           [status]=\"(weight?.hasError('minlength') || weight?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           class=\"form-control\" placeholder=\"Ingrese el nombre\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"weight?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"weight?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                </div>\r\n            </form>\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <button nbButton status=\"primary\" [disabled]=\"!variableForm.valid\" (click)=\"save()\" hero>Guardar</button>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-third-party-profiling',\r\n  templateUrl: './third-party-profiling.component.html',\r\n  styleUrls: ['./third-party-profiling.component.scss'],\r\n})\r\nexport class ThirdPartyProfilingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Location} from \"@angular/common\";\r\nimport {ParameterizeVariableService} from \"../../backend/common/services/parameterize-variable.service\";\r\nimport {CustomServerDataSource} from \"../../../../utils/custom-server.data-source\";\r\nimport {PaginationFilter} from \"../../../../utils/pagination-filter\";\r\nimport {Subject} from \"rxjs\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {NbDialogService, NbWindowService} from \"@nebular/theme\";\r\nimport {CategoryVariablesFormComponent} from \"./components/category-variables-form/category-variables-form.component\";\r\n\r\n@Component({\r\n    selector: 'ngx-category-variables',\r\n    templateUrl: './category-variables.component.html',\r\n    styleUrls: ['./category-variables.component.scss']\r\n})\r\nexport class CategoryVariablesComponent implements OnInit {\r\n\r\n    searchTextChanged = new Subject<string>();\r\n    source: CustomServerDataSource;\r\n    search = '';\r\n    paginationFilter = new PaginationFilter();\r\n\r\n    settings = {\r\n        mode: 'external',\r\n        actions: {\r\n            add: false,\r\n            edit: true,\r\n            delete: false,\r\n        },\r\n        add: {\r\n            addButtonContent: '<i class=\"nb-plus\"></i>',\r\n            createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        edit: {\r\n            editButtonContent: '<i class=\"nb-edit\"></i>',\r\n            saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        delete: {\r\n            deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n            confirmDelete: true,\r\n        },\r\n        columns: {\r\n            id: {\r\n                title: 'Código',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            name: {\r\n                title: 'Nombre',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            weight: {\r\n                title: 'Peso',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n        },\r\n    };\r\n\r\n    constructor(private location: Location,\r\n                private route: ActivatedRoute,\r\n                private windowService: NbWindowService,\r\n                private dialogService: NbDialogService,\r\n                private parameterizeVariableService: ParameterizeVariableService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.searchTextChanged\r\n            // .debounceTime(250)\r\n            // .distinctUntilChanged()\r\n            .subscribe((query) => {\r\n                this.source.setSearchQuery(query);\r\n            });\r\n    }\r\n\r\n    back($event: MouseEvent) {\r\n        $event.preventDefault();\r\n        this.location.back();\r\n    }\r\n\r\n    onEdit($event: any) {\r\n        const variable = $event.data;\r\n        //this.windowService.open(CategoryVariablesFormComponent, {title: 'Categorías de variable'});\r\n        /*this.windowService.open(CategoryVariablesFormComponent, {\r\n            context: {\r\n                title: 'Categorías de variable',\r\n                categoryVariables: variable\r\n            }\r\n        });*/\r\n\r\n        const dialogRef = this.dialogService.open(CategoryVariablesFormComponent, {\r\n            context: {\r\n                categoryVariables: variable,\r\n            },\r\n        });\r\n\r\n        dialogRef.onClose.subscribe(() => {\r\n            this.source.refresh()\r\n        })\r\n    }\r\n\r\n    onPersonTypeChange(personTypeId: any) {\r\n        const riskProfileVariableId = this.route.snapshot.paramMap.get('id');\r\n        this.source = this.parameterizeVariableService.getCategoryVariablesServerDataSource(+riskProfileVariableId, personTypeId)\r\n        /*this.source = this.ge\r\n        console.log('id', id);\r\n        console.log('event', value);*/\r\n    }\r\n\r\n    searchCategoryVariables($event: any) {\r\n        this.searchTextChanged.next($event.target.value);\r\n    }\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        <nav class=\"navigation\">\r\n            <a href=\"#\" (click)=\"back($event)\" class=\"link back-link\" aria-label=\"Back\">\r\n                <nb-icon icon=\"arrow-back\"></nb-icon>\r\n            </a>\r\n            Categorías de variables\r\n        </nav>\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"personType\" class=\"label\">Tipo Persona</label>\r\n                <nb-select\r\n                        id=\"personType\"\r\n                        (selectedChange)=\"onPersonTypeChange($event)\"\r\n                        selected=\"\"\r\n                        fullWidth>\r\n                    <nb-option value=\"\">Seleccione...</nb-option>\r\n                    <nb-option value=\"1\">Natural</nb-option>\r\n                    <nb-option value=\"2\">Jurídica</nb-option>\r\n                </nb-select>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-12\">\r\n                <nb-form-field>\r\n                    <input [(ngModel)]=\"search\"\r\n                           (keyup)=\"searchCategoryVariables($event)\"\r\n                           nbInput>\r\n                    <button ghost nbButton nbSuffix>\r\n                        <nb-icon [icon]=\"'search-outline'\"\r\n                                 pack=\"eva\">\r\n                        </nb-icon>\r\n                    </button>\r\n                </nb-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <ng2-smart-table class=\"example-smart-table\"\r\n                         (edit)=\"onEdit($event)\"\r\n                         [settings]=\"settings\"\r\n                         [source]=\"source\">\r\n        </ng2-smart-table>\r\n    </nb-card-body>\r\n</nb-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {CustomServerDataSource} from \"../../../../utils/custom-server.data-source\";\r\nimport {PaginationFilter} from \"../../../../utils/pagination-filter\";\r\nimport {Subject} from \"rxjs\";\r\nimport {Router} from \"@angular/router\";\r\nimport {RiskProfileVariablesFormComponent} from \"./components/risk-profile-variables-form/risk-profile-variables-form.component\";\r\nimport {NbDialogService, NbWindowService} from \"@nebular/theme\";\r\nimport {ParameterizeVariableService} from \"../../backend/common/services/parameterize-variable.service\";\r\nimport {CustomIconSmartTableCellComponent} from \"../../../../@components/editors/custom-icon-smart-table-cell/custom-icon-smart-table-cell.component\";\r\n\r\n@Component({\r\n    selector: 'ngx-risk-profile-variables',\r\n    templateUrl: './risk-profile-variables.component.html',\r\n    styleUrls: ['./risk-profile-variables.component.scss']\r\n})\r\nexport class RiskProfileVariablesComponent implements OnInit {\r\n\r\n    constructor(private router: Router,\r\n                private windowService: NbWindowService,\r\n                private dialogService: NbDialogService,\r\n                private parameterizeVariableService: ParameterizeVariableService) {\r\n        this.source = this.parameterizeVariableService.getRiskProfileVariableServerDataSource();\r\n    }\r\n\r\n    searchTextChanged = new Subject<string>();\r\n    source: CustomServerDataSource;\r\n    search = '';\r\n    paginationFilter = new PaginationFilter();\r\n\r\n    settings = {\r\n        mode: 'external',\r\n        actions: {\r\n            add: false,\r\n            edit: true,\r\n            delete: false,\r\n        },\r\n        add: {\r\n            addButtonContent: '<i class=\"nb-plus\"></i>',\r\n            createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        edit: {\r\n            editButtonContent: '<i class=\"nb-edit\"></i>',\r\n            saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        delete: {\r\n            deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n            confirmDelete: true,\r\n        },\r\n        columns: {\r\n            name: {\r\n                title: 'Nombre',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            weight: {\r\n                title: 'Peso',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            categories: {\r\n                title: 'Categorías',\r\n                type: 'custom',\r\n                filter: false,\r\n                renderComponent: CustomIconSmartTableCellComponent,\r\n                onComponentInitFunction: (instance) => {\r\n                    instance.save.subscribe(row => {\r\n                        this.onOpenCategoryVariables(row)\r\n                    });\r\n                }\r\n            },\r\n        },\r\n    };\r\n\r\n    ngOnInit(): void {\r\n        this.searchTextChanged\r\n            // .debounceTime(250)\r\n            // .distinctUntilChanged()\r\n            .subscribe((query) => {\r\n                this.source.setSearchQuery(query);\r\n            });\r\n    }\r\n\r\n    onEdit($event: any) {\r\n        const variable = $event.data;\r\n        /*const windowRef = this.windowService.open(RiskProfileVariablesFormComponent, {context: {\r\n                title: 'Editar variable de perfiles de riesgo cali',\r\n                riskProfileVariables: variable\r\n            }});\r\n\r\n        windowRef.onClose.subscribe((result) => {\r\n            console.log('result', result);\r\n        })*/\r\n\r\n        const dialogRef = this.dialogService.open(RiskProfileVariablesFormComponent, {\r\n            context: {\r\n                riskProfileVariables: variable,\r\n            },\r\n        });\r\n\r\n        dialogRef.onClose.subscribe((result) => {\r\n            this.source.refresh()\r\n        })\r\n    }\r\n\r\n    onOpenCategoryVariables(data: any) {\r\n        this.router.navigate([`/pages/third-party-profiling/parameterize-variables/category-variables/${data.id}`]);\r\n    }\r\n\r\n    searchRiskProfileVariables($event: any) {\r\n        this.searchTextChanged.next($event.target.value);\r\n    }\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        Variables de perfiles de riesgo\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-12\">\r\n                <nb-form-field>\r\n                    <input [(ngModel)]=\"search\"\r\n                           (keyup)=\"searchRiskProfileVariables($event)\"\r\n                           nbInput>\r\n                    <button ghost nbButton nbSuffix>\r\n                        <nb-icon [icon]=\"'search-outline'\"\r\n                                 pack=\"eva\">\r\n                        </nb-icon>\r\n                    </button>\r\n                </nb-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <ng2-smart-table class=\"example-smart-table\"\r\n                         (edit)=\"onEdit($event)\"\r\n                         [settings]=\"settings\"\r\n                         [source]=\"source\">\r\n        </ng2-smart-table>\r\n    </nb-card-body>\r\n</nb-card>\r\n","import {Injectable} from '@angular/core';\r\nimport {PaginationFilter} from '../../../../../utils/pagination-filter';\r\nimport {CustomServerDataSource} from \"../../../../../utils/custom-server.data-source\";\r\nimport {ParameterizeVariableApi} from \"../api/parameterize-variable.api\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ParameterizeVariableService {\r\n\r\n    constructor(private api: ParameterizeVariableApi) {\r\n    }\r\n\r\n    getRiskProfileVariableServerDataSource(): CustomServerDataSource {\r\n        return this.api.getRiskProfileVariableServerDataSource();\r\n    }\r\n\r\n    getCategoryVariablesServerDataSource(riskProfileVariableId: number, personTypeId: number): CustomServerDataSource {\r\n        return this.api.getCategoryVariablesServerDataSource(riskProfileVariableId, personTypeId);\r\n    }\r\n\r\n    updateRiskProfileVariable(id: number, data: any): Observable<any> {\r\n        return this.api.updateRiskProfileVariable(id, data);\r\n    }\r\n\r\n    updateCategoryVariable(id: number, data: any): Observable<any> {\r\n        return this.api.updateCategoryVariable(id, data);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}