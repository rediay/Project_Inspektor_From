{"version":3,"sources":["webpack:///src/app/pages/third-party-profiling/parameterize-variables/category-variables/components/category-variables-form/category-variables-form.component.ts","webpack:///src/app/pages/third-party-profiling/parameterize-variables/category-variables/components/category-variables-form/category-variables-form.component.html","webpack:///src/app/pages/third-party-profiling/third-party-profiling-routing.module.ts","webpack:///src/app/pages/third-party-profiling/backend/common/api/parameterize-variable.api.ts","webpack:///src/app/pages/third-party-profiling/third-party-profiling.module.ts","webpack:///src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/components/risk-profile-variables-form/risk-profile-variables-form.component.ts","webpack:///src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/components/risk-profile-variables-form/risk-profile-variables-form.component.html","webpack:///src/app/pages/third-party-profiling/third-party-profiling.component.ts","webpack:///src/app/pages/third-party-profiling/third-party-profiling.component.html","webpack:///src/app/pages/third-party-profiling/parameterize-variables/category-variables/category-variables.component.ts","webpack:///src/app/pages/third-party-profiling/parameterize-variables/category-variables/category-variables.component.html","webpack:///src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/risk-profile-variables.component.ts","webpack:///src/app/pages/third-party-profiling/parameterize-variables/risk-profile-variables/risk-profile-variables.component.html","webpack:///src/app/pages/third-party-profiling/backend/common/services/parameterize-variable.service.ts"],"names":["CategoryVariablesFormComponent","toastrService","dialogRef","windowRef","parameterizeVariableService","fb","nameError","weightError","categoryVariableForm","get","initCategoryVariableForm","loadVariable","group","id","control","name","required","minLength","maxLength","weight","categoryVariables","riskProfileVariableId","personTypeId","setValue","data","value","updateCategoryVariable","subscribe","response","success","icon","close","error","danger","save","routes","path","component","children","ThirdPartyProfilingRoutingModule","forChild","routedComponents","ParameterizeVariableApi","api","apiRiskProfileVariableController","apiCategoryVariablesController","apiCategoryVariablesDataSourceController","getServerDataSource","endpoint","put","ThirdPartyProfilingModule","RiskProfileVariablesFormComponent","variableForm","initVariableForm","riskProfileVariables","updateRiskProfileVariable","ThirdPartyProfilingComponent","CategoryVariablesComponent","location","route","windowService","dialogService","searchTextChanged","search","paginationFilter","settings","mode","actions","add","edit","addButtonContent","createButtonContent","cancelButtonContent","editButtonContent","saveButtonContent","deleteButtonContent","confirmDelete","columns","title","type","filter","query","source","setSearchQuery","$event","preventDefault","back","variable","open","context","onClose","refresh","snapshot","paramMap","getCategoryVariablesServerDataSource","next","target","onPersonTypeChange","searchCategoryVariables","onEdit","RiskProfileVariablesComponent","router","categories","renderComponent","onComponentInitFunction","instance","row","onOpenCategoryVariables","getRiskProfileVariableServerDataSource","result","navigate","searchRiskProfileVariables","ParameterizeVariableService"],"mappings":"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","file":"third-party-profiling-third-party-profiling-module-es5.js","sourcesContent":["import {Component, EventEmitter, Input, OnInit, Optional, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {NbDialogRef, NbToastrService, NbWindowRef} from \"@nebular/theme\";\r\nimport {ParameterizeVariableService} from \"../../../../backend/common/services/parameterize-variable.service\";\r\n\r\n@Component({\r\n    selector: 'ngx-category-variables-form',\r\n    templateUrl: './category-variables-form.component.html',\r\n    styleUrls: ['./category-variables-form.component.scss']\r\n})\r\nexport class CategoryVariablesFormComponent implements OnInit {\r\n\r\n    categoryVariableForm: FormGroup;\r\n    nameError = null;\r\n    weightError = null;\r\n    private riskProfileVariableId: number;\r\n    private personTypeId: number;\r\n    @Input() categoryVariables: any;\r\n\r\n    get name() {\r\n        return this.categoryVariableForm.get('name');\r\n    }\r\n\r\n    get weight() {\r\n        return this.categoryVariableForm.get('weight');\r\n    }\r\n\r\n    constructor(protected toastrService: NbToastrService,\r\n                @Optional() protected dialogRef: NbDialogRef<CategoryVariablesFormComponent>,\r\n                @Optional() protected windowRef: NbWindowRef,\r\n                private parameterizeVariableService: ParameterizeVariableService,\r\n                private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initCategoryVariableForm();\r\n        this.loadVariable();\r\n    }\r\n\r\n    initCategoryVariableForm() {\r\n        this.categoryVariableForm = this.fb.group({\r\n            id: this.fb.control(''),\r\n            name: this.fb.control('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\r\n            weight: this.fb.control('', [Validators.required, Validators.minLength(1), Validators.maxLength(20)]),\r\n        });\r\n    }\r\n\r\n    loadVariable() {\r\n        const id = this.categoryVariables.id ? this.categoryVariables.id : '';\r\n        const name = this.categoryVariables.name ? this.categoryVariables.name : '';\r\n        const weight = this.categoryVariables.weight ? this.categoryVariables.weight : '';\r\n\r\n        this.riskProfileVariableId = this.categoryVariables.riskProfileVariableId;\r\n        this.personTypeId = this.categoryVariables.personTypeId;\r\n\r\n        this.categoryVariableForm.setValue({\r\n            id: id,\r\n            name: name,\r\n            weight: weight,\r\n        })\r\n    }\r\n\r\n    save() {\r\n        const data = this.categoryVariableForm.value;\r\n        const id = data.id;\r\n\r\n        data.riskProfileVariableId = this.riskProfileVariableId\r\n        data.personTypeId = this.personTypeId\r\n\r\n        this.parameterizeVariableService.updateCategoryVariable(id, data).subscribe(response => {\r\n\r\n            this.toastrService.success('', '¡Registro exitoso!', {\r\n                icon: '',\r\n            });\r\n\r\n            this.dialogRef.close(response)\r\n\r\n        }, error => {\r\n            this.toastrService.danger('', 'Error al guardar el registro', {\r\n                icon: '',\r\n            });\r\n        })\r\n    }\r\n}\r\n","<div class=\"col-lg-12\">\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Editar categorías de variable\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <form [formGroup]=\"categoryVariableForm\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"name\">Nombre categoría</label>\r\n                    <input fullWidth nbInput id=\"name\" formControlName=\"name\"\r\n                           [status]=\"(name?.hasError('minlength') || name?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           placeholder=\"Ingrese el número Documento\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"name?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"name?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                    <p class=\"error-message caption status-danger\"\r\n                       *ngIf=\"nameError\">\r\n                        {{nameError}}\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"weight\">Peso</label>\r\n                    <input fullWidth nbInput id=\"weight\" formControlName=\"weight\"\r\n                           [status]=\"(weight?.hasError('minlength') || weight?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           class=\"form-control\" placeholder=\"Ingrese el nombre\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"weight?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"weight?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                </div>\r\n            </form>\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <button nbButton status=\"primary\" [disabled]=\"!categoryVariableForm.valid\" (click)=\"save()\" hero>Guardar\r\n            </button>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ThirdPartyProfilingComponent} from './third-party-profiling.component';\r\nimport {RiskProfileVariablesComponent} from \"./parameterize-variables/risk-profile-variables/risk-profile-variables.component\";\r\nimport {CategoryVariablesComponent} from \"./parameterize-variables/category-variables/category-variables.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ThirdPartyProfilingComponent,\r\n        children: [\r\n            {\r\n                path: 'parameterize-variables/risk-profile-variables',\r\n                component: RiskProfileVariablesComponent,\r\n            },\r\n            {\r\n                path: 'parameterize-variables/category-variables/:id',\r\n                component: CategoryVariablesComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\n\r\nexport class ThirdPartyProfilingRoutingModule {\r\n}\r\n\r\nexport const routedComponents = [\r\n    ThirdPartyProfilingComponent,\r\n];\r\n","import {Injectable} from '@angular/core';\r\nimport {CustomHttpService} from '../../../../../utils/custom-http.service';\r\nimport {CustomServerDataSource} from \"../../../../../utils/custom-server.data-source\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ParameterizeVariableApi {\r\n\r\n    private readonly apiRiskProfileVariableController: string = 'third-party-profiling/parameterize-variables/risk-profile-variables';\r\n    private readonly apiCategoryVariablesController: string = 'third-party-profiling/parameterize-variables/category-variables';\r\n    private readonly apiCategoryVariablesDataSourceController: string = 'third-party-profiling/parameterize-variables/risk-profile-variables';\r\n\r\n    constructor(private api: CustomHttpService) {\r\n    }\r\n\r\n    getRiskProfileVariableServerDataSource(): CustomServerDataSource {\r\n        return this.api.getServerDataSource(`${this.apiRiskProfileVariableController}`);\r\n    }\r\n\r\n    getCategoryVariablesServerDataSource(riskProfileVariableId: number, personTypeId: number): CustomServerDataSource {\r\n        const endpoint = `${this.apiCategoryVariablesDataSourceController}/${riskProfileVariableId}/category-variables/person-type/${personTypeId}`\r\n        return this.api.getServerDataSource(`${endpoint}`);\r\n    }\r\n\r\n    updateRiskProfileVariable(id: number, data: any): Observable<any> {\r\n        return this.api.put(`${this.apiRiskProfileVariableController}/${id}`, data);\r\n    }\r\n\r\n    updateCategoryVariable(id: number, data: any): Observable<any> {\r\n        return this.api.put(`${this.apiCategoryVariablesController}/${id}`, data);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ThirdPartyProfilingRoutingModule} from './third-party-profiling-routing.module';\r\nimport {ThirdPartyProfilingComponent} from './third-party-profiling.component';\r\nimport {\r\n    NbButtonModule,\r\n    NbCardModule,\r\n    NbDialogService,\r\n    NbFormFieldModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    NbSelectModule,\r\n    NbTreeGridModule,\r\n    NbWindowService,\r\n} from \"@nebular/theme\";\r\nimport {Ng2SmartTableModule} from \"ng2-smart-table\";\r\nimport {ComponentsModule} from \"../../@components/components.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {RiskProfileVariablesComponent} from './parameterize-variables/risk-profile-variables/risk-profile-variables.component';\r\nimport {RiskProfileVariablesFormComponent} from './parameterize-variables/risk-profile-variables/components/risk-profile-variables-form/risk-profile-variables-form.component';\r\nimport {CustomHttpService} from \"../../utils/custom-http.service\";\r\nimport {ParameterizeVariableApi} from \"./backend/common/api/parameterize-variable.api\";\r\nimport {ParameterizeVariableService} from \"./backend/common/services/parameterize-variable.service\";\r\nimport { CategoryVariablesComponent } from './parameterize-variables/category-variables/category-variables.component';\r\nimport { CategoryVariablesFormComponent } from './parameterize-variables/category-variables/components/category-variables-form/category-variables-form.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ThirdPartyProfilingComponent,\r\n        RiskProfileVariablesComponent,\r\n        RiskProfileVariablesFormComponent,\r\n        CategoryVariablesComponent,\r\n        CategoryVariablesFormComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ThirdPartyProfilingRoutingModule,\r\n        NbCardModule,\r\n        NbTreeGridModule,\r\n        Ng2SmartTableModule,\r\n        NbInputModule,\r\n        ComponentsModule,\r\n        ReactiveFormsModule,\r\n        NbSelectModule,\r\n        NbIconModule,\r\n        NbButtonModule,\r\n        NbFormFieldModule,\r\n        FormsModule,\r\n    ],\r\n    providers: [\r\n        CustomHttpService,\r\n        ParameterizeVariableApi,\r\n        ParameterizeVariableService,\r\n        NbDialogService,\r\n        NbWindowService,\r\n    ]\r\n})\r\nexport class ThirdPartyProfilingModule {\r\n}\r\n","import {Component, Input, OnInit, Optional} from '@angular/core';\r\nimport {NbDialogRef, NbToastrService, NbWindowRef} from \"@nebular/theme\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ParameterizeVariableService} from \"../../../../backend/common/services/parameterize-variable.service\";\r\n\r\n@Component({\r\n    selector: 'ngx-risk-profile-variables-form',\r\n    templateUrl: './risk-profile-variables-form.component.html',\r\n    styleUrls: ['./risk-profile-variables-form.component.scss']\r\n})\r\nexport class RiskProfileVariablesFormComponent implements OnInit {\r\n\r\n    constructor(protected toastrService: NbToastrService,\r\n                @Optional() protected dialogRef: NbDialogRef<RiskProfileVariablesFormComponent>,\r\n                @Optional() protected windowRef: NbWindowRef,\r\n                private parameterizeVariableService: ParameterizeVariableService,\r\n                private fb: FormBuilder) {\r\n    }\r\n\r\n    @Input() riskProfileVariables: any;\r\n    variableForm: FormGroup;\r\n    nameError = null;\r\n    weightError = null;\r\n\r\n    get name() {\r\n        return this.variableForm.get('name');\r\n    }\r\n\r\n    get weight() {\r\n        return this.variableForm.get('weight');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initVariableForm();\r\n        this.loadVariable();\r\n    }\r\n\r\n    initVariableForm() {\r\n        this.variableForm = this.fb.group({\r\n            id: this.fb.control(''),\r\n            name: this.fb.control('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\r\n            weight: this.fb.control('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\r\n        });\r\n    }\r\n\r\n    loadVariable() {\r\n        const id = this.riskProfileVariables.id ? this.riskProfileVariables.id : '';\r\n        const name = this.riskProfileVariables.name ? this.riskProfileVariables.name : '';\r\n        const weight = this.riskProfileVariables.weight ? this.riskProfileVariables.weight : '';\r\n\r\n        this.variableForm.setValue({\r\n            id: id,\r\n            name: name,\r\n            weight: weight\r\n        })\r\n    }\r\n\r\n    save() {\r\n        const data = this.variableForm.value;\r\n        const id = data.id;\r\n\r\n        this.parameterizeVariableService.updateRiskProfileVariable(id, data).subscribe((response) => {\r\n\r\n            this.toastrService.success('', '¡Registro exitoso!', {\r\n                icon: '',\r\n            });\r\n\r\n            this.dialogRef.close(response)\r\n\r\n\r\n            /*this.windowRef.onClose.subscribe(response => {\r\n                console.log('response', response);\r\n            })*/\r\n            // console.log('componentRef', this.windowRef.componentRef);\r\n            // this.dialogRef.close(response)\r\n\r\n        }, error => {\r\n            this.toastrService.danger('', 'Error al guardar el registro', {\r\n                icon: '',\r\n            });\r\n        })\r\n    }\r\n}\r\n","<div class=\"col-lg-12\">\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Editar variable\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <form [formGroup]=\"variableForm\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"name\">Nombre variable</label>\r\n                    <input fullWidth nbInput id=\"name\" formControlName=\"name\"\r\n                           [status]=\"(name?.hasError('minlength') || name?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           placeholder=\"Ingrese el número Documento\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"name?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"name?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                    <p class=\"error-message caption status-danger\"\r\n                       *ngIf=\"nameError\">\r\n                        {{nameError}}\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\" for=\"weight\">Peso</label>\r\n                    <input fullWidth nbInput id=\"weight\" formControlName=\"weight\"\r\n                           [status]=\"(weight?.hasError('minlength') || weight?.hasError('maxlength')) ? 'danger' : 'primary'\"\r\n                           class=\"form-control\" placeholder=\"Ingrese el nombre\">\r\n                    <ngx-validation-message label=\"First Name\"\r\n                                            [showMinLength]=\"weight?.hasError('minlength')\"\r\n                                            [showMaxLength]=\"weight?.hasError('maxlength')\" minLength=3\r\n                                            maxLength=20></ngx-validation-message>\r\n                </div>\r\n            </form>\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <button nbButton status=\"primary\" [disabled]=\"!variableForm.valid\" (click)=\"save()\" hero>Guardar</button>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-third-party-profiling',\r\n  templateUrl: './third-party-profiling.component.html',\r\n  styleUrls: ['./third-party-profiling.component.scss'],\r\n})\r\nexport class ThirdPartyProfilingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Location} from \"@angular/common\";\r\nimport {ParameterizeVariableService} from \"../../backend/common/services/parameterize-variable.service\";\r\nimport {CustomServerDataSource} from \"../../../../utils/custom-server.data-source\";\r\nimport {PaginationFilter} from \"../../../../utils/pagination-filter\";\r\nimport {Subject} from \"rxjs\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {NbDialogService, NbWindowService} from \"@nebular/theme\";\r\nimport {CategoryVariablesFormComponent} from \"./components/category-variables-form/category-variables-form.component\";\r\n\r\n@Component({\r\n    selector: 'ngx-category-variables',\r\n    templateUrl: './category-variables.component.html',\r\n    styleUrls: ['./category-variables.component.scss']\r\n})\r\nexport class CategoryVariablesComponent implements OnInit {\r\n\r\n    searchTextChanged = new Subject<string>();\r\n    source: CustomServerDataSource;\r\n    search = '';\r\n    paginationFilter = new PaginationFilter();\r\n\r\n    settings = {\r\n        mode: 'external',\r\n        actions: {\r\n            add: false,\r\n            edit: true,\r\n            delete: false,\r\n        },\r\n        add: {\r\n            addButtonContent: '<i class=\"nb-plus\"></i>',\r\n            createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        edit: {\r\n            editButtonContent: '<i class=\"nb-edit\"></i>',\r\n            saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        delete: {\r\n            deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n            confirmDelete: true,\r\n        },\r\n        columns: {\r\n            id: {\r\n                title: 'Código',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            name: {\r\n                title: 'Nombre',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            weight: {\r\n                title: 'Peso',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n        },\r\n    };\r\n\r\n    constructor(private location: Location,\r\n                private route: ActivatedRoute,\r\n                private windowService: NbWindowService,\r\n                private dialogService: NbDialogService,\r\n                private parameterizeVariableService: ParameterizeVariableService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.searchTextChanged\r\n            // .debounceTime(250)\r\n            // .distinctUntilChanged()\r\n            .subscribe((query) => {\r\n                this.source.setSearchQuery(query);\r\n            });\r\n    }\r\n\r\n    back($event: MouseEvent) {\r\n        $event.preventDefault();\r\n        this.location.back();\r\n    }\r\n\r\n    onEdit($event: any) {\r\n        const variable = $event.data;\r\n        //this.windowService.open(CategoryVariablesFormComponent, {title: 'Categorías de variable'});\r\n        /*this.windowService.open(CategoryVariablesFormComponent, {\r\n            context: {\r\n                title: 'Categorías de variable',\r\n                categoryVariables: variable\r\n            }\r\n        });*/\r\n\r\n        const dialogRef = this.dialogService.open(CategoryVariablesFormComponent, {\r\n            context: {\r\n                categoryVariables: variable,\r\n            },\r\n        });\r\n\r\n        dialogRef.onClose.subscribe(() => {\r\n            this.source.refresh()\r\n        })\r\n    }\r\n\r\n    onPersonTypeChange(personTypeId: any) {\r\n        const riskProfileVariableId = this.route.snapshot.paramMap.get('id');\r\n        this.source = this.parameterizeVariableService.getCategoryVariablesServerDataSource(+riskProfileVariableId, personTypeId)\r\n        /*this.source = this.ge\r\n        console.log('id', id);\r\n        console.log('event', value);*/\r\n    }\r\n\r\n    searchCategoryVariables($event: any) {\r\n        this.searchTextChanged.next($event.target.value);\r\n    }\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        <nav class=\"navigation\">\r\n            <a href=\"#\" (click)=\"back($event)\" class=\"link back-link\" aria-label=\"Back\">\r\n                <nb-icon icon=\"arrow-back\"></nb-icon>\r\n            </a>\r\n            Categorías de variables\r\n        </nav>\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"personType\" class=\"label\">Tipo Persona</label>\r\n                <nb-select\r\n                        id=\"personType\"\r\n                        (selectedChange)=\"onPersonTypeChange($event)\"\r\n                        selected=\"\"\r\n                        fullWidth>\r\n                    <nb-option value=\"\">Seleccione...</nb-option>\r\n                    <nb-option value=\"1\">Natural</nb-option>\r\n                    <nb-option value=\"2\">Jurídica</nb-option>\r\n                </nb-select>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-12\">\r\n                <nb-form-field>\r\n                    <input [(ngModel)]=\"search\"\r\n                           (keyup)=\"searchCategoryVariables($event)\"\r\n                           nbInput>\r\n                    <button ghost nbButton nbSuffix>\r\n                        <nb-icon [icon]=\"'search-outline'\"\r\n                                 pack=\"eva\">\r\n                        </nb-icon>\r\n                    </button>\r\n                </nb-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <ng2-smart-table class=\"example-smart-table\"\r\n                         (edit)=\"onEdit($event)\"\r\n                         [settings]=\"settings\"\r\n                         [source]=\"source\">\r\n        </ng2-smart-table>\r\n    </nb-card-body>\r\n</nb-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {CustomServerDataSource} from \"../../../../utils/custom-server.data-source\";\r\nimport {PaginationFilter} from \"../../../../utils/pagination-filter\";\r\nimport {Subject} from \"rxjs\";\r\nimport {Router} from \"@angular/router\";\r\nimport {RiskProfileVariablesFormComponent} from \"./components/risk-profile-variables-form/risk-profile-variables-form.component\";\r\nimport {NbDialogService, NbWindowService} from \"@nebular/theme\";\r\nimport {ParameterizeVariableService} from \"../../backend/common/services/parameterize-variable.service\";\r\nimport {CustomIconSmartTableCellComponent} from \"../../../../@components/editors/custom-icon-smart-table-cell/custom-icon-smart-table-cell.component\";\r\n\r\n@Component({\r\n    selector: 'ngx-risk-profile-variables',\r\n    templateUrl: './risk-profile-variables.component.html',\r\n    styleUrls: ['./risk-profile-variables.component.scss']\r\n})\r\nexport class RiskProfileVariablesComponent implements OnInit {\r\n\r\n    constructor(private router: Router,\r\n                private windowService: NbWindowService,\r\n                private dialogService: NbDialogService,\r\n                private parameterizeVariableService: ParameterizeVariableService) {\r\n        this.source = this.parameterizeVariableService.getRiskProfileVariableServerDataSource();\r\n    }\r\n\r\n    searchTextChanged = new Subject<string>();\r\n    source: CustomServerDataSource;\r\n    search = '';\r\n    paginationFilter = new PaginationFilter();\r\n\r\n    settings = {\r\n        mode: 'external',\r\n        actions: {\r\n            add: false,\r\n            edit: true,\r\n            delete: false,\r\n        },\r\n        add: {\r\n            addButtonContent: '<i class=\"nb-plus\"></i>',\r\n            createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        edit: {\r\n            editButtonContent: '<i class=\"nb-edit\"></i>',\r\n            saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n        },\r\n        delete: {\r\n            deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n            confirmDelete: true,\r\n        },\r\n        columns: {\r\n            name: {\r\n                title: 'Nombre',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            weight: {\r\n                title: 'Peso',\r\n                type: 'string',\r\n                filter: false,\r\n            },\r\n            categories: {\r\n                title: 'Categorías',\r\n                type: 'custom',\r\n                filter: false,\r\n                renderComponent: CustomIconSmartTableCellComponent,\r\n                onComponentInitFunction: (instance) => {\r\n                    instance.save.subscribe(row => {\r\n                        this.onOpenCategoryVariables(row)\r\n                    });\r\n                }\r\n            },\r\n        },\r\n    };\r\n\r\n    ngOnInit(): void {\r\n        this.searchTextChanged\r\n            // .debounceTime(250)\r\n            // .distinctUntilChanged()\r\n            .subscribe((query) => {\r\n                this.source.setSearchQuery(query);\r\n            });\r\n    }\r\n\r\n    onEdit($event: any) {\r\n        const variable = $event.data;\r\n        /*const windowRef = this.windowService.open(RiskProfileVariablesFormComponent, {context: {\r\n                title: 'Editar variable de perfiles de riesgo cali',\r\n                riskProfileVariables: variable\r\n            }});\r\n\r\n        windowRef.onClose.subscribe((result) => {\r\n            console.log('result', result);\r\n        })*/\r\n\r\n        const dialogRef = this.dialogService.open(RiskProfileVariablesFormComponent, {\r\n            context: {\r\n                riskProfileVariables: variable,\r\n            },\r\n        });\r\n\r\n        dialogRef.onClose.subscribe((result) => {\r\n            this.source.refresh()\r\n        })\r\n    }\r\n\r\n    onOpenCategoryVariables(data: any) {\r\n        this.router.navigate([`/pages/third-party-profiling/parameterize-variables/category-variables/${data.id}`]);\r\n    }\r\n\r\n    searchRiskProfileVariables($event: any) {\r\n        this.searchTextChanged.next($event.target.value);\r\n    }\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        Variables de perfiles de riesgo\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-12\">\r\n                <nb-form-field>\r\n                    <input [(ngModel)]=\"search\"\r\n                           (keyup)=\"searchRiskProfileVariables($event)\"\r\n                           nbInput>\r\n                    <button ghost nbButton nbSuffix>\r\n                        <nb-icon [icon]=\"'search-outline'\"\r\n                                 pack=\"eva\">\r\n                        </nb-icon>\r\n                    </button>\r\n                </nb-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <ng2-smart-table class=\"example-smart-table\"\r\n                         (edit)=\"onEdit($event)\"\r\n                         [settings]=\"settings\"\r\n                         [source]=\"source\">\r\n        </ng2-smart-table>\r\n    </nb-card-body>\r\n</nb-card>\r\n","import {Injectable} from '@angular/core';\r\nimport {PaginationFilter} from '../../../../../utils/pagination-filter';\r\nimport {CustomServerDataSource} from \"../../../../../utils/custom-server.data-source\";\r\nimport {ParameterizeVariableApi} from \"../api/parameterize-variable.api\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ParameterizeVariableService {\r\n\r\n    constructor(private api: ParameterizeVariableApi) {\r\n    }\r\n\r\n    getRiskProfileVariableServerDataSource(): CustomServerDataSource {\r\n        return this.api.getRiskProfileVariableServerDataSource();\r\n    }\r\n\r\n    getCategoryVariablesServerDataSource(riskProfileVariableId: number, personTypeId: number): CustomServerDataSource {\r\n        return this.api.getCategoryVariablesServerDataSource(riskProfileVariableId, personTypeId);\r\n    }\r\n\r\n    updateRiskProfileVariable(id: number, data: any): Observable<any> {\r\n        return this.api.updateRiskProfileVariable(id, data);\r\n    }\r\n\r\n    updateCategoryVariable(id: number, data: any): Observable<any> {\r\n        return this.api.updateCategoryVariable(id, data);\r\n    }\r\n}\r\n"]}