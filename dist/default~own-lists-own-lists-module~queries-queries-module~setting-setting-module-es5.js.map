{"version":3,"sources":["webpack:///src/app/@components/editors/file-uploader/upload-queue-item.component.ts","webpack:///src/app/@components/editors/file-uploader/upload-queue-item.component.html","webpack:///src/app/@components/editors/file-uploader/file-uploader.service.ts","webpack:///src/app/@components/editors/file-uploader/file-uploader.module.ts","webpack:///src/app/@components/editors/file-uploader/file-uploader.component.ts","webpack:///src/app/@components/editors/file-uploader/file-uploader.component.html","webpack:///src/app/@components/editors/file-uploader/file-uploader.model.ts"],"names":["NbUploadQueueItemComponent","item","progress","NbFileUploaderService","uploadQueue","files","options","addToQueue","forEach","file","upload","push","sendable","FormData","append","rawFile","name","onBeforeUpload","xhr","XMLHttpRequest","open","url","onprogress","event","percentDone","Math","round","lengthComputable","loaded","total","onProgress","onerror","onError","onload","onSuccess","params","Object","entries","key","value","headers","setRequestHeader","send","NbFileUploaderModule","NbFileUploaderComponent","uploader","multiple","directory","showUploadQueue","selectFile","allowedFileTypes","join","inputEl","nativeElement","click","preparedFiles","getPreparedFiles","length","emit","Array","from","map","onChange","browse","NbFileItem","isUploading","isUploaded","isSuccess","isCancel","isError","lastModified","size","type"],"mappings":"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","file":"default~own-lists-own-lists-module~queries-queries-module~setting-setting-module-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nb-upload-queue-item',\r\n  templateUrl: 'upload-queue-item.component.html',\r\n  styleUrls: ['./upload-queue-item.component.scss'],\r\n})\r\nexport class NbUploadQueueItemComponent {\r\n  @Input()\r\n  item: any;\r\n\r\n  get status(): string {\r\n    if (this.item.progress <= 25) {\r\n      return 'danger';\r\n    }\r\n    if (this.item.progress <= 50) {\r\n      return 'warning';\r\n    }\r\n    if (this.item.progress <= 75) {\r\n      return 'info';\r\n    }\r\n    return 'success';\r\n  }\r\n}\r\n","<span class=\"file-item-caption\">\r\n  <span>{{ item.name }}</span>\r\n  <span class=\"file-progress\">{{ item.progress + '%' }}</span>\r\n</span>\r\n\r\n<nb-progress-bar [value]=\"item.progress\" [status]=\"status\"></nb-progress-bar>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of as observableOf } from 'rxjs';\r\n\r\nimport { NbFileUploaderOptions, NbFileItem } from './file-uploader.model';\r\n\r\n@Injectable()\r\nexport class NbFileUploaderService {\r\n  private uploadQueue: NbFileItem[] = [];\r\n\r\n  get uploadQueue$(): Observable<NbFileItem[]> {\r\n    return observableOf(this.uploadQueue);\r\n  }\r\n\r\n  uploadAll(files: NbFileItem[], options: NbFileUploaderOptions) {\r\n    if (!files) {\r\n      return;\r\n    }\r\n    this.addToQueue(files);\r\n    files.forEach((file: NbFileItem) => this.upload(file, options));\r\n  }\r\n\r\n  private addToQueue(files: NbFileItem[]) {\r\n    this.uploadQueue.push(...files);\r\n  }\r\n\r\n  private upload(file: NbFileItem, options: NbFileUploaderOptions) {\r\n    const sendable = new FormData();\r\n    sendable.append('file', file.rawFile, file.name);\r\n\r\n    file.onBeforeUpload();\r\n\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    xhr.open('post', options.url, true);\r\n\r\n    xhr.upload.onprogress = event => {\r\n      const percentDone = Math.round(event.lengthComputable ? (100 * event.loaded) / event.total : 0);\r\n      file.onProgress(percentDone);\r\n    };\r\n\r\n    xhr.onerror = event => {\r\n      file.onError();\r\n    };\r\n\r\n    xhr.onload = event => {\r\n      file.onSuccess();\r\n    };\r\n\r\n    if (options.params) {\r\n      Object.entries(options.params).forEach(([key, value]) => {\r\n        sendable.append(key, value);\r\n      });\r\n    }\r\n\r\n    if (options.headers) {\r\n      Object.entries(options.headers).forEach(([key, value]) => {\r\n        xhr.setRequestHeader(key, value);\r\n      });\r\n    }\r\n\r\n    xhr.send(sendable);\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { NbEvaIconsModule } from \"@nebular/eva-icons\";\r\nimport { NbButtonComponent, NbButtonModule, NbIconModule, NbProgressBarModule } from \"@nebular/theme\";\r\nimport { NbFileUploaderComponent } from \"./file-uploader.component\";\r\nimport { NbUploadQueueItemComponent } from \"./upload-queue-item.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [NbFileUploaderComponent, NbUploadQueueItemComponent, NbUploadQueueItemComponent],\r\n  imports: [CommonModule, HttpClientModule, NbProgressBarModule,NbButtonModule,NbIconModule,NbEvaIconsModule],\r\n  exports: [NbFileUploaderComponent, NbUploadQueueItemComponent, NbUploadQueueItemComponent],\r\n  providers: [],\r\n})\r\nexport class NbFileUploaderModule {}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\r\n\r\nimport { NbFileUploaderService } from './file-uploader.service';\r\nimport { NbFileUploaderOptions, NbFileItem } from './file-uploader.model';\r\n\r\n@Component({\r\n  selector: 'nb-file-uploader',\r\n  templateUrl: './file-uploader.component.html',\r\n  styleUrls: ['./file-uploader.component.scss'],\r\n  providers: [NbFileUploaderService],\r\n})\r\nexport class NbFileUploaderComponent {\r\n  @ViewChild('inputEl')\r\n  inputEl: ElementRef;\r\n\r\n  @Input()\r\n  options: NbFileUploaderOptions = { multiple: false, directory: false, showUploadQueue: true };\r\n\r\n  @Output()\r\n  selectFile = new EventEmitter<File[]>();\r\n\r\n  get accept(): string {\r\n    return this.options.allowedFileTypes.join(',');\r\n  }\r\n\r\n  constructor(public uploader: NbFileUploaderService) {}\r\n\r\n  browse() {\r\n    this.inputEl.nativeElement.click();\r\n  }\r\n\r\n  onChange() {\r\n    const files = this.inputEl.nativeElement.files;\r\n    const preparedFiles = this.getPreparedFiles(files);\r\n\r\n    if (files.length > 0) {\r\n      this.selectFile.emit(files[0])\r\n    }\r\n    //this.uploader.uploadAll(preparedFiles, this.options);\r\n  }\r\n\r\n  private getPreparedFiles(files): NbFileItem[] {\r\n    return Array.from(files).map((file: File) => new NbFileItem(file));\r\n  }\r\n}\r\n","<div class=\"file-uploader\">\r\n    <ng-container>\r\n        <input #inputEl type=\"file\" style=\"display: none;\" [accept]=\"accept\" [multiple]=\"options.multiple\" (change)=\"onChange()\">\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"options.directory\">\r\n        <input #inputEl type=\"file\" style=\"display: none;\" [accept]=\"accept\" [multiple]=\"options.multiple\" webkitdirectory (change)=\"onChange()\">\r\n    </ng-container>\r\n\r\n\r\n    <button nbButton outline status=\"success\" (click)=\"browse()\">        \r\n        <nb-icon icon=\"upload-outline\"></nb-icon>\r\n        Seleccionar archivo\r\n    </button>\r\n</div>\r\n\r\n<nb-upload-queue *ngIf=\"(uploader.uploadQueue$ | async).length && options.showUploadQueue\" [items]=\"uploader.uploadQueue$ | async\"></nb-upload-queue>","export interface NbFileUploaderOptions {\r\n  multiple?: boolean;\r\n  directory?: boolean;\r\n  showUploadQueue?: boolean;\r\n\r\n  url?: string;\r\n  params?: { [key: string]: string };\r\n  headers?: { [key: string]: string };\r\n\r\n  allowedFileTypes?: string[];\r\n}\r\n\r\nexport class NbFileItem {\r\n  rawFile: File;\r\n  name: string;\r\n  lastModified: number;\r\n  progress: number = 0;\r\n  size: number;\r\n  type: string;\r\n\r\n  isUploading: boolean = false;\r\n  isUploaded: boolean = false;\r\n  isSuccess: boolean = false;\r\n  isCancel: boolean = false;\r\n  isError: boolean = false;\r\n\r\n  constructor(file: File) {\r\n    this.rawFile = file;\r\n    this.name = file.name;\r\n    this.lastModified = file.lastModified;\r\n    this.size = file.size;\r\n    this.type = file.type;\r\n  }\r\n\r\n  onProgress(progress: number) {\r\n    this.progress = progress;\r\n  }\r\n\r\n  onBeforeUpload() {\r\n    this.isUploading = true;\r\n    this.isUploading = false;\r\n    this.isCancel = false;\r\n    this.isError = false;\r\n    this.isSuccess = false;\r\n    this.progress = 0;\r\n  }\r\n\r\n  onSuccess() {\r\n    this.isUploading = false;\r\n    this.isUploaded = true;\r\n    this.isCancel = false;\r\n    this.isError = false;\r\n    this.isSuccess = true;\r\n    this.progress = 100;\r\n  }\r\n\r\n  onCancel() {\r\n    this.isUploading = false;\r\n    this.isUploaded = false;\r\n    this.isCancel = true;\r\n    this.isError = false;\r\n    this.isSuccess = false;\r\n    this.progress = 0;\r\n  }\r\n\r\n  onError() {\r\n    this.isUploading = false;\r\n    this.isUploaded = false;\r\n    this.isCancel = false;\r\n    this.isError = true;\r\n    this.isSuccess = false;\r\n    this.progress = 0;\r\n  }\r\n}\r\n"]}